{"version":3,"sources":["md/home/index.md","md/useEffect/index.md","router/util.ts","router/routeWithLayout.tsx","components/Layout/Navigator/index.tsx","components/Layout/index.tsx","components/MdView/index.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["module","exports","recoverPath","currentRoute","childRoutes","length","nextRoute","find","route","path","lastChildRoutePath","children","RedirectRoute","React","memo","routes","pathname","location","redirectUrl","to","homePath","renderRouterWithChildren","parentRoute","childrenRender","map","child","index","CustomerRoute","props","Layout","layout","layoutProps","RouterComponent","component","restProps","ignoreCache","render","PrivateRoute","rest","PREFIX","Mavigator","className","matchedPath","routers","useLocation","router","useMemo","includes","useRouterPathMatch","cls","name","key","title","MdView","md","dangerouslySetInnerHTML","__html","WEB_ROOT","process","getPath","home","useEffect","RootRouter","undefined","App","ReactDOM","document","getElementById"],"mappings":"wGAGAA,EAAOC,QAFI,0L,iBCEXD,EAAOC,QAFI,wnG,2MCEEC,EAAyE,SAAzEA,EACXC,EACAC,GAEA,GAAID,IAAY,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAaC,QAAQ,CACvC,IAKMC,EALoBC,eACxBH,GACA,SAACI,GAAD,OAAWA,EAAMC,QAAN,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAcO,wBAGHN,EAAY,GACnD,OAAOF,EAAYI,EAAWA,EAAUK,UAE1C,OAAmB,OAAZR,QAAY,IAAZA,OAAA,EAAAA,EAAcM,OAAQ,ICFzBG,EAKFC,IAAMC,MAAK,YAAwC,IAA5BN,EAA2B,EAA3BA,MAAOO,EAAoB,EAApBA,OACxBC,GAD4C,EAAZC,UACP,IAAzBD,SACFE,EAAchB,EAAYM,EAAOO,GACvC,OAAIG,IAAgBF,EACX,kBAAC,IAAD,CAAUG,GAAID,IAEhB,kBAAC,IAAD,CAAUC,GAAIC,OAGVC,EAA2B,SAA3BA,EACXb,EACAG,EACAW,GAEA,IAAMC,EAAiBZ,EACrB,kBAAC,IAAD,KACGa,cAAIb,GAAU,SAACc,EAAOC,GACrB,OAAOL,EAAyBI,EAAOA,EAAMd,SAAUH,MAEzD,kBAACI,EAAD,CAAeG,OAAQJ,EAAUH,MAAOA,KAExC,KAEJ,OACE,kBAAC,EAAD,eACEe,eAAgBA,GACZf,EAFN,CAGEA,MAAOA,EACPc,YAAaA,EACblB,YAAaO,MAKbgB,EAAiDd,IAAMC,MAAK,SAAuBc,GAAQ,IAE7FL,EASEK,EATFL,eACAf,EAQEoB,EARFpB,MACAc,EAOEM,EAPFN,YACAlB,EAMEwB,EANFxB,YACQyB,EAKND,EALFE,OACAC,EAIEH,EAJFG,YAEWC,GAETJ,EAHFjB,SAGEiB,EAFFK,WACGC,EAVyF,YAW1FN,EAX0F,sGAgB9F,OAHIN,IAAgBA,EAAYa,cAC9Bb,EAAYZ,mBAAZ,OAAiCF,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAOC,MAErCD,GAIAJ,GACC4B,EACEH,EAEA,kBAAC,EAAD,iBACMK,EADN,CAEEE,OAAQ,kBACN,kBAACP,EAAD,eAAQrB,MAAOA,GAAWuB,GACxB,kBAACC,EAAoBE,QAMxB,kBAAC,EAAD,iBAAkBA,EAAlB,CAA6BE,OAAQ,kBAAM,kBAACJ,EAAoBE,OAIvE9B,GACEyB,EAEA,kBAAC,EAAD,iBACMK,EADN,CAEEE,OAAQ,kBACN,kBAACP,EAAD,eAAQzB,YAAaA,EAAaI,MAAOA,GAAWuB,GACjDR,OAONA,EAnCEA,KAuCEc,EAAe,SAAC,GAA4C,IAA1CD,EAAyC,EAAzCA,OAAWE,EAA8B,0BACtE,OAAO,kBAAC,IAAD,iBAAWA,EAAX,CAAiBF,OAAQA,M,gBCtG5BG,G,YAAS,aAsCAC,EAvBqB3B,IAAMC,MAAK,SAA2Bc,GAAQ,IACxEa,EAA2Bb,EAA3Ba,UAAWrC,EAAgBwB,EAAhBxB,YACbsC,EAVmB,SAACC,GAC1B,IAAM1B,EAAW2B,cACXC,EAASC,mBAAQ,WACrB,OAAOvC,eAAKoC,GAAS,SAACE,GAAD,OAAY5B,EAASD,SAAS+B,SAASF,EAAOpC,WAClE,CAACQ,EAASD,SAAU2B,IACvB,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAQpC,KAKKuC,CAAmB5C,GAEvC,OACE,yBAAKqC,UAAWQ,IAAI,GAAD,OAAIV,GAAUE,IAC9BrC,EAAYoB,KAAI,SAACqB,GAAD,OACfH,IAAgBG,EAAOpC,KACrB,0BAAMgC,UAAWQ,IAAI,GAAD,OAAIV,EAAJ,SAAmB,cACpCM,EAAOK,KACR,yBAAKT,UAAS,UAAKF,EAAL,iBAGhB,kBAAC,IAAD,CAAME,UAAWQ,IAAI,GAAD,OAAIV,EAAJ,UAAoBY,IAAKN,EAAOpC,KAAMU,GAAI0B,EAAOpC,MAClEoC,EAAOK,KACR,yBAAKT,UAAS,UAAKF,EAAL,wBChCpBA,EAAS,SAyBAV,EAjBkBhB,IAAMC,MAAK,SAAgBc,GAAQ,IAC1DwB,EAAiCxB,EAAjCwB,MAAOhD,EAA0BwB,EAA1BxB,YAAaO,EAAaiB,EAAbjB,SAC5B,OACE,yBAAK8B,UAAWQ,IAAI,GAAD,OAAIV,KACrB,yBAAKE,UAAS,UAAKF,EAAL,UACZ,0BAAME,UAAS,UAAKF,EAAL,eAA0Ba,IAE3C,yBAAKX,UAAS,UAAKF,EAAL,UACZ,yBAAKE,UAAS,UAAKF,EAAL,cACZ,kBAAC,EAAD,CAAWnC,YAAaA,KAE1B,yBAAKqC,UAAS,UAAKF,EAAL,eAA0B5B,QCNjC0C,EATkBxC,IAAMC,MAAK,SAAgBc,GAAQ,IAC1Da,EAAkBb,EAAlBa,UAAWa,EAAO1B,EAAP0B,GACnB,OACE,yBAAKb,UAAWQ,IAAI,GAAD,OAVR,UAUsBR,IAC/B,yBAAKc,wBAAyB,CAAEC,OAAQF,SCLxCG,EAAWC,kBAEjB,SAASC,EAAQlD,GACf,MAAM,GAAN,OAAUgD,GAAV,OAAqBhD,GAGhB,IAAMW,EAAWuC,EAAQ,SAC1B5C,EAAmB,CACvB,CACEN,KAAMgD,EACN3B,OAAQD,EACRE,YAAa,CAAEqB,MAAO,sBACtBjB,aAAa,EACbxB,SAAU,CACR,CACEF,KAAMW,EACN8B,KAAM,OACNjB,UAAW,kBAAM,kBAAC,EAAD,CAAQqB,GAAIM,QAE/B,CACEnD,KAAMkD,EAAQ,cACdT,KAAM,YACNjB,UAAW,kBAAM,kBAAC,EAAD,CAAQqB,GAAIO,WAiBtBC,EAXI,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGzC,OAAyB0C,EAAWhD,GACrC,kBAAC,IAAD,CAAUI,GAAG,aClCN6C,G,MAJOnD,IAAMC,MAAK,SAAac,GAC5C,OAAO,kBAAC,EAAD,UCDTqC,IAAS7B,OAAO,kBAAC,EAAD,MAAS8B,SAASC,eAAe,W","file":"static/js/main.a1e83086.chunk.js","sourcesContent":["// Module\nvar code = \"<p>这个博客主要用来记录 react 学习中遇到的点点滴滴，巩固知识点。</p> <hr> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h1 id=\\\"useeffect、uselayouteffect\\\">useEffect、useLayoutEffect</h1> <hr> <p>useEffect 的作用和 componentDidMount 以及 componentDidUpdate 有点类似，只不过 useEffect 的粒度更细，可以在 useEffect 中控制一个流程的发起和销毁。具体用法可以查看<a href=\\\"https://zh-hans.reactjs.org/docs/hooks-effect.html\\\">官网</a>,这里主要讨论下 useEffect 和 componentDidMount/componentDidUpdate 的区别 以及 useEffect 和 useLayoutEffect 的区别。</p> <h2 id=\\\"useeffect-vs-componentdidmountcomponentdidupdate\\\">useEffect vs componentDidMount/componentDidUpdate</h2> <p>componentDidMount 是 class 组件初次渲染结束时执行的生命周期函数，是在 react 的 commit 阶段，紧接着组件渲染完后执行的，会阻塞浏览器的渲染，如果在其中执行耗时的任务，那在耗时任务结束前，页面是看不到更新的，componentDidUpdate 和 componentDidMount 的行为差不多，只是执行的时机不是初次渲染。</p> <p>useEffect 有三个重要的组成，处理函数、依赖、销毁函数（处理函数返回的函数），每当依赖发生变化都会先执行上一次生成的销毁函数再执行新的处理函数。</p> <p><strong>useEffect 不会阻塞浏览器的渲染</strong>，因为 useEffect 是等到 commit 完成后，再在另一个宏任务中执行的，这个宏任务是通过 messageChannel 的 postMessage 触发的 j 具体细节可查看 react schedule 模块的实现。</p> <h2 id=\\\"useeffect-vs-uselayouteffect\\\">useEffect vs useLayoutEffect</h2> <p>事实上百分之 99%的场景使用 useEffect 和 useLayoutEffect 的效果是一样的, 不同点是，useLayoutEffect 的表现和 componentDidUpdate 一样，会阻塞浏览器的渲染,具体可参考<a href=\\\"https://codesandbox.io/s/useeffect-vs-uselayouteffect-gtvim\\\">useEffect</a>,可以发现使用 useEffect 时红色数字 1 会一闪而过，useLayoutEffect 不会出现这种现象。</p> <p><img src=\\\"/react-markdown/assets/useEffect.png\\\" alt=\\\"github\\\" width=\\\"1400\\\" style=\\\"margin:auto;display:block\\\"></p> \";\n// Exports\nmodule.exports = code;","import { IRoute } from './interface';\nimport { find } from 'lodash';\n\nexport const recoverPath: (currentRoute?: IRoute, childRoutes?: IRoute[]) => string = (\n  currentRoute,\n  childRoutes,\n) => {\n  if (currentRoute && childRoutes?.length) {\n    const matchedChildRoute = find(\n      childRoutes,\n      (route) => route.path === currentRoute?.lastChildRoutePath,\n    );\n\n    const nextRoute = matchedChildRoute || childRoutes[0];\n    return recoverPath(nextRoute, nextRoute.children);\n  }\n  return currentRoute?.path || '';\n};\n","import { IRoute } from './interface';\nimport { Redirect, Route, RouteComponentProps, RouteProps, Switch } from 'react-router-dom';\nimport { map } from 'lodash';\nimport { recoverPath } from './util';\nimport React from 'react';\nimport { homePath } from '.';\n\ntype IRouteWithLayoutProps = Omit<RouteProps, 'component' | 'render' | 'children'> & {\n  childrenRender: React.ReactNode;\n  childRoutes?: IRoute[];\n  parentRoute?: IRoute;\n  route?: IRoute;\n} & Partial<IRoute>;\n\nconst RedirectRoute: React.FC<\n  Partial<RouteComponentProps> & {\n    routes?: IRoute[];\n    route?: IRoute;\n  }\n> = React.memo(function ({ route, routes, location }) {\n  const { pathname } = location || {};\n  const redirectUrl = recoverPath(route, routes);\n  if (redirectUrl !== pathname) {\n    return <Redirect to={redirectUrl} />;\n  }\n  return <Redirect to={homePath} />;\n});\n\nexport const renderRouterWithChildren = (\n  route: IRoute | undefined,\n  children?: IRoute[],\n  parentRoute?: IRoute,\n) => {\n  const childrenRender = children ? (\n    <Switch>\n      {map(children, (child, index) => {\n        return renderRouterWithChildren(child, child.children, route);\n      })}\n      <RedirectRoute routes={children} route={route} />\n    </Switch>\n  ) : null;\n\n  return (\n    <CustomerRoute\n      childrenRender={childrenRender}\n      {...route}\n      route={route}\n      parentRoute={parentRoute}\n      childRoutes={children}\n    />\n  );\n};\n\nconst CustomerRoute: React.FC<IRouteWithLayoutProps> = React.memo(function CustomerRoute(props) {\n  const {\n    childrenRender,\n    route,\n    parentRoute,\n    childRoutes,\n    layout: Layout,\n    layoutProps,\n    children,\n    component: RouterComponent,\n    ...restProps\n  } = props;\n\n  if (parentRoute && !parentRoute.ignoreCache) {\n    parentRoute.lastChildRoutePath = route?.path;\n  }\n  if (!route) {\n    return childrenRender as React.ReactElement;\n  }\n\n  if (!childRoutes) {\n    if (RouterComponent) {\n      if (Layout) {\n        return (\n          <PrivateRoute\n            {...restProps}\n            render={() => (\n              <Layout route={route} {...layoutProps}>\n                <RouterComponent {...restProps} />\n              </Layout>\n            )}\n          />\n        );\n      }\n      return <PrivateRoute {...restProps} render={() => <RouterComponent {...restProps} />} />;\n    }\n  }\n\n  if (childRoutes) {\n    if (Layout) {\n      return (\n        <PrivateRoute\n          {...restProps}\n          render={() => (\n            <Layout childRoutes={childRoutes} route={route} {...layoutProps}>\n              {childrenRender}\n            </Layout>\n          )}\n        />\n      );\n    }\n  }\n  return childrenRender as React.ReactElement;\n});\ntype PrivateRouteProps = Required<Pick<RouteProps, 'render'>> &\n  Omit<RouteProps, 'component' | 'render'>;\nexport const PrivateRoute = ({ render, ...rest }: PrivateRouteProps) => {\n  return <Route {...rest} render={render} />;\n};\n","import { Link } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { useLocation } from 'react-router';\nimport React, { useMemo } from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../../router/interface';\n\nconst PREFIX = 'Mavigator';\n\ninterface IProps {\n  className?: string;\n  childRoutes: IRoute[];\n}\n\nconst useRouterPathMatch = (routers: IRoute[]) => {\n  const location = useLocation();\n  const router = useMemo(() => {\n    return find(routers, (router) => location.pathname.includes(router.path));\n  }, [location.pathname, routers]);\n  return router?.path;\n};\n\nconst Mavigator: React.FC<IProps> = React.memo(function AppThirdNavigator(props) {\n  const { className, childRoutes } = props;\n  const matchedPath = useRouterPathMatch(childRoutes);\n\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      {childRoutes.map((router) =>\n        matchedPath === router.path ? (\n          <span className={cls(`${PREFIX}-item`, 'is-active')}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </span>\n        ) : (\n          <Link className={cls(`${PREFIX}-item`)} key={router.path} to={router.path}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </Link>\n        ),\n      )}\n    </div>\n  );\n});\n\nexport default Mavigator;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../router/interface';\nimport Mavigator from './Navigator';\n\nconst PREFIX = 'Layout';\n\ninterface IProps {\n  title?: React.ReactNode;\n  route?: IRoute;\n  childRoutes: IRoute[];\n}\n\nconst Layout: React.FC<IProps> = React.memo(function Layout(props) {\n  const { title, childRoutes, children } = props;\n  return (\n    <div className={cls(`${PREFIX}`)}>\n      <div className={`${PREFIX}-head`}>\n        <span className={`${PREFIX}-headTitle`}>{title}</span>\n      </div>\n      <div className={`${PREFIX}-body`}>\n        <div className={`${PREFIX}-bodyLeft`}>\n          <Mavigator childRoutes={childRoutes} />\n        </div>\n        <div className={`${PREFIX}-bodyRight`}>{children}</div>\n      </div>\n    </div>\n  );\n});\n\nexport default Layout;\n","import React from 'react';\nimport cls from 'classnames';\n\nconst PREFIX = 'MdView';\n\ninterface IProps {\n  className?: string;\n  md: string;\n}\n\nconst MdView: React.FC<IProps> = React.memo(function MdView(props) {\n  const { className, md } = props;\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <div dangerouslySetInnerHTML={{ __html: md }}></div>\n    </div>\n  );\n});\n\nexport default MdView;\n","import home from '../md/home/index.md';\nimport useEffect from '../md/useEffect/index.md';\nimport { Switch, Redirect, BrowserRouter } from 'react-router-dom';\nimport { renderRouterWithChildren } from './routeWithLayout';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport MdView from '../components/MdView';\nimport { IRoute } from './interface';\n\nconst WEB_ROOT = process.env.WEB_ROOT || '/';\n\nfunction getPath(path: string) {\n  return `${WEB_ROOT}${path}`;\n}\n\nexport const homePath = getPath('/home');\nconst routes: IRoute[] = [\n  {\n    path: WEB_ROOT,\n    layout: Layout,\n    layoutProps: { title: 'react 解析' },\n    ignoreCache: true,\n    children: [\n      {\n        path: homePath,\n        name: 'home',\n        component: () => <MdView md={home} />,\n      },\n      {\n        path: getPath('/useEffect'),\n        name: 'useEffect',\n        component: () => <MdView md={useEffect} />,\n      },\n    ],\n  },\n];\n\nconst RootRouter = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {renderRouterWithChildren(undefined, routes)}\n        <Redirect to=\"/home\" />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RootRouter;\n","import React from 'react';\nimport RootRouter from './router';\nimport './index.less';\n\nconst App: React.FC = React.memo(function App(props) {\n  return <RootRouter />;\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}