{"version":3,"sources":["md/home/index.md","md/useEffect/index.md","md/useContext/index.md","md/useEffect/index.tsx","components/Common/index.tsx","md/useContext/scene/first.tsx","md/useContext/scene/second.tsx","md/useContext/scene/third.tsx","md/useContext/index.tsx","router/util.ts","router/routeWithLayout.tsx","components/Layout/Navigator/index.tsx","components/Layout/index.tsx","components/Layout/Folder/index.tsx","components/MdView/index.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["module","exports","UseEffectView","React","memo","props","className","useState","count","setCount","useEffect","console","log","handleClick","useCallback","cls","onClick","Scene","styled","div","Panel","H3","H2","H1","Button","Conclusion","children","visible","setVisible","handleOpen","prev","style","position","borderTop","backgroundColor","padding","display","justifyContent","height","textAlign","fontSize","lineHeight","countContext","createContext","displayName","First","name","setName","Provider","value","onChange","e","target","Receiver","useContext","renderCount","useRef","current","Second","Third","fish","setFish","fruit","setFruit","FishReceiver","FruitReceiver","UseContext","recoverPath","currentRoute","childRoutes","length","nextRoute","find","route","path","lastChildRoutePath","RedirectRoute","routes","pathname","location","redirectUrl","to","homePath","renderRouterWithChildren","parentRoute","childrenRender","map","child","index","CustomerRoute","Layout","layout","layoutProps","RouterComponent","component","restProps","ignoreCache","render","PrivateRoute","rest","PREFIX","Mavigator","matchedPath","routers","useLocation","router","useMemo","includes","useRouterPathMatch","key","title","Folder","fold","setFold","MdView","md","view","dangerouslySetInnerHTML","__html","WEB_ROOT","process","getPath","home","RootRouter","undefined","App","ReactDOM","document","getElementById"],"mappings":"wGAGAA,EAAOC,QAFI,0L,iBCEXD,EAAOC,QAFI,unG,iBCEXD,EAAOC,QAFI,I,8OC4BIC,EApByBC,IAAMC,MAAK,SAAuBC,GAAQ,IACxEC,EAAcD,EAAdC,UADuE,EAErDC,mBAAiB,GAFoC,mBAExEC,EAFwE,KAEjEC,EAFiE,KAG/EC,qBAAU,WAER,OADAC,QAAQC,IAAIJ,GACL,WACLG,QAAQC,IAAI,qBAEb,CAACJ,IAEJ,IAAMK,EAAcC,uBAAY,WAC9BL,EAASD,EAAQ,KAChB,CAACA,IACJ,OACE,yBAAKF,UAAWS,IAAI,GAAD,OApBR,iBAoBsBT,GAAYU,QAASH,GACnDL,M,w7BCtBA,IAAMS,EAAQC,IAAOC,IAAV,KAMLC,EAAQF,IAAOC,IAAV,KAMLE,EAAKH,IAAOC,IAAV,KAKFG,EAAKJ,IAAOC,IAAV,KAKFI,EAAKL,IAAOC,IAAV,KAKFK,EAASN,IAAOC,IAAV,KA6CJM,EApCctB,IAAMC,MAAK,SAAoBC,GAAQ,IAC1DqB,EAAarB,EAAbqB,SADyD,EAEnCnB,oBAAkB,GAFiB,mBAE1DoB,EAF0D,KAEjDC,EAFiD,KAG3DC,EAAaf,uBAAY,WAC7Bc,GAAW,SAACE,GAAD,OAAWA,OACrB,IACH,OACE,yBACEC,MAAO,CACLC,SAAU,WACVC,UAAW,oBACXC,gBAAiB,UACjBC,QAAS,SAGX,yBACEJ,MAAO,CACLK,QAAS,OACTC,eAAgB,gBAEhBC,OAAQ,OACRC,UAAW,QACXC,SAAU,OACVC,WAAY,QAEdzB,QAASa,GAET,kBAACR,EAAD,qBAEA,kBAACG,EAAD,KAASG,EAAU,eAAO,iBAE3BA,GAAW,yBAAKI,MAAO,CAAEI,QAAS,cAAgBT,OClEnDgB,EAAevC,IAAMwC,cAAkC,CAAEnC,MAAO,KACtEkC,EAAaE,YAAc,QAE3B,IAiCeC,EAjCS1C,IAAMC,MAAK,SAAeC,GAAQ,IAAD,EAC7BE,mBAAiB,KADY,mBAChDC,EADgD,KACzCC,EADyC,OAE/BF,mBAAiB,IAFc,mBAEhDuC,EAFgD,KAE1CC,EAF0C,KAWvD,OACE,oCACE,kBAAC9B,EAAD,KACE,kBAACyB,EAAaM,SAAd,CAAuBC,MAAO,CAAEzC,UAC9B,kBAACe,EAAD,kHACA,6BACE,4CACA,2BAAO0B,MAAOH,EAAMI,SAdT,SAACC,GACpBJ,EAAQI,EAAEC,OAAOH,WAeX,kBAAC7B,EAAD,KACE,kBAACE,EAAD,gBACA,6CACA,2BAAO2B,MAAOzC,EAAO0C,SAfL,SAACC,GACzB1C,EAAS0C,EAAEC,OAAOH,UAeV,kBAAC,EAAD,SAIN,kBAAC,EAAD,4IAOAI,EAAqBlD,IAAMC,MAAK,WAAqB,IACjDI,EAAU8C,qBAAWZ,GAArBlC,MACF+C,EAAcC,iBAAe,GAInC,OAHA9C,qBAAU,WACR6C,EAAYE,SAAW,KAGvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,gCAEYd,EACV,gFAAc+C,EAAYE,aChD1Bf,EAAevC,IAAMwC,cAAiC,CAAEnC,MAAO,IAgCtDkD,EA9BUvD,IAAMC,MAAK,SAAgBC,GAClD,OACE,oCACE,kBAACY,EAAD,KACE,kBAACM,EAAD,qMACA,kBAACH,EAAD,KACE,kBAACE,EAAD,kBADF,WAGE,kBAAC,EAAa0B,SAAd,CAAuBC,MAAO,CAAEzC,MAAO,IACrC,kBAACY,EAAD,KACE,kBAACE,EAAD,mBADF,WAGE,kBAAC,EAAa0B,SAAd,CAAuBC,MAAO,CAAEzC,MAAO,IACrC,kBAACY,EAAD,KACE,kBAACE,EAAD,mBADF,WAGE,kBAAC,EAAD,QAGJ,kBAAC,EAAD,QAGJ,kBAAC,EAAD,QAGJ,kBAAC,EAAD,qCAOA+B,EAAqBlD,IAAMC,MAAK,SAAkBC,GAAQ,IACtDG,EAAU8C,qBAAWZ,GAArBlC,MACR,OACE,kBAACY,EAAD,KACE,kBAACE,EAAD,uCADF,gCAEYd,MCvCVkC,EAAevC,IAAMwC,cAAiD,IA2C7DgB,EAzCSxD,IAAMC,MAAK,SAAeC,GAAQ,IAAD,EAC/BE,qBAD+B,mBAChDqD,EADgD,KAC1CC,EAD0C,OAE7BtD,qBAF6B,mBAEhDuD,EAFgD,KAEzCC,EAFyC,KAUvD,OACE,oCACE,kBAAC9C,EAAD,KACE,kBAAC,EAAa+B,SAAd,CAAuBC,MAAO,CAAEW,OAAME,UACpC,kBAACvC,EAAD,yOAIA,kBAACH,EAAD,KACE,kBAACE,EAAD,oDACA,6BACE,8CACA,2BAAO2B,MAAOW,EAAMV,SAlBP,SAACC,GACxBU,IAAUV,EAAEC,OAAOH,WAmBX,6BACE,oDACA,2BAAOA,MAAOa,EAAOZ,SAnBP,SAACC,GACzBY,IAAWZ,EAAEC,OAAOH,WAoBZ,kBAACe,EAAD,MACA,kBAACC,EAAD,SAIN,kBAAC,EAAD,yNAEE,sFAQFD,EAAyB7D,IAAMC,MAAK,SAAkBC,GAAQ,IAC1DuD,EAASN,qBAAWZ,GAApBkB,KACFL,EAAcC,iBAAe,GAKnC,OAJA9C,qBAAU,WACR6C,EAAYE,SAAW,KAIvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,uCAESsC,EACP,gFAAcL,EAAYE,aAK1BQ,EAA0B9D,IAAMC,MAAK,SAAkBC,GAAQ,IAC3DyD,EAAUR,qBAAWZ,GAArBoB,MACFP,EAAcC,iBAAe,GAInC,OAHA9C,qBAAU,WACR6C,EAAYE,SAAW,KAGvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,6CAEUwC,EACR,gFAAcP,EAAYE,aC3DjBS,EAVc/D,IAAMC,MAAK,SAAoBC,GAC1D,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,U,+BCPO8D,EAAyE,SAAzEA,EACXC,EACAC,GAEA,GAAID,IAAY,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAaC,QAAQ,CACvC,IAKMC,EALoBC,eACxBH,GACA,SAACI,GAAD,OAAWA,EAAMC,QAAN,OAAeN,QAAf,IAAeA,OAAf,EAAeA,EAAcO,wBAGHN,EAAY,GACnD,OAAOF,EAAYI,EAAWA,EAAU7C,UAE1C,OAAmB,OAAZ0C,QAAY,IAAZA,OAAA,EAAAA,EAAcM,OAAQ,ICFzBE,EAKFzE,IAAMC,MAAK,YAAwC,IAA5BqE,EAA2B,EAA3BA,MAAOI,EAAoB,EAApBA,OACxBC,GAD4C,EAAZC,UACP,IAAzBD,SACFE,EAAcb,EAAYM,EAAOI,GACvC,OAAIG,IAAgBF,EACX,kBAAC,IAAD,CAAUG,GAAID,GAAeE,KAE/B,kBAAC,IAAD,CAAUD,GAAIC,QAGVC,EAA2B,SAA3BA,EACXV,EACA/C,EACA0D,GAEA,IAAMC,EAAiB3D,EACrB,kBAAC,IAAD,KACG4D,cAAI5D,GAAU,SAAC6D,EAAOC,GACrB,OAAOL,EAAyBI,EAAOA,EAAM7D,SAAU+C,MAEzD,kBAACG,EAAD,CAAeC,OAAQnD,EAAU+C,MAAOA,KAExC,KAEJ,OACE,kBAAC,EAAD,eACEY,eAAgBA,GACZZ,EAFN,CAGEA,MAAOA,EACPW,YAAaA,EACbf,YAAa3C,MAKb+D,EAAiDtF,IAAMC,MAAK,SAAuBC,GAAQ,IAE7FgF,EASEhF,EATFgF,eACAZ,EAQEpE,EARFoE,MACAW,EAOE/E,EAPF+E,YACAf,EAMEhE,EANFgE,YACQqB,EAKNrF,EALFsF,OACAC,EAIEvF,EAJFuF,YAEWC,GAETxF,EAHFqB,SAGErB,EAFFyF,WACGC,EAVyF,YAW1F1F,EAX0F,sGAgB9F,OAHI+E,IAAgBA,EAAYY,cAC9BZ,EAAYT,mBAAZ,OAAiCF,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAOC,MAErCD,GAIAJ,GACCwB,EACEH,EAEA,kBAAC,EAAD,iBACMK,EADN,CAEEE,OAAQ,kBACN,kBAACP,EAAD,eAAQjB,MAAOA,GAAWmB,GACxB,kBAACC,EAAoBE,QAMxB,kBAAC,EAAD,iBAAkBA,EAAlB,CAA6BE,OAAQ,kBAAM,kBAACJ,EAAoBE,OAIvE1B,GACEqB,EAEA,kBAAC,EAAD,iBACMK,EADN,CAEEE,OAAQ,kBACN,kBAACP,EAAD,eAAQrB,YAAaA,EAAaI,MAAOA,GAAWmB,GACjDP,OAONA,EAnCEA,KAuCEa,EAAe,SAAC,GAA4C,IAA1CD,EAAyC,EAAzCA,OAAWE,EAA8B,0BACtE,OAAO,kBAAC,IAAD,iBAAWA,EAAX,CAAiBF,OAAQA,MCtG5BG,G,YAAS,aAsCAC,EAvBqBlG,IAAMC,MAAK,SAA2BC,GAAQ,IACxEC,EAA2BD,EAA3BC,UAAW+D,EAAgBhE,EAAhBgE,YACbiC,EAVmB,SAACC,GAC1B,IAAMxB,EAAWyB,cACXC,EAASC,mBAAQ,WACrB,OAAOlC,eAAK+B,GAAS,SAACE,GAAD,OAAY1B,EAASD,SAAS6B,SAASF,EAAO/B,WAClE,CAACK,EAASD,SAAUyB,IACvB,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAQ/B,KAKKkC,CAAmBvC,GAEvC,OACE,yBAAK/D,UAAWS,IAAI,GAAD,OAAIqF,GAAU9F,IAC9B+D,EAAYiB,KAAI,SAACmB,GAAD,OACfH,IAAgBG,EAAO/B,KACrB,0BAAMpE,UAAWS,IAAI,GAAD,OAAIqF,EAAJ,SAAmB,cACpCK,EAAO3D,KACR,yBAAKxC,UAAS,UAAK8F,EAAL,iBAGhB,kBAAC,IAAD,CAAM9F,UAAWS,IAAI,GAAD,OAAIqF,EAAJ,UAAoBS,IAAKJ,EAAO/B,KAAMO,GAAIwB,EAAO/B,MAClE+B,EAAO3D,KACR,yBAAKxC,UAAS,UAAK8F,EAAL,wBChCpBA,GAAS,SAyBAV,GAjBkBvF,IAAMC,MAAK,SAAgBC,GAAQ,IAC1DyG,EAAiCzG,EAAjCyG,MAAOzC,EAA0BhE,EAA1BgE,YAAa3C,EAAarB,EAAbqB,SAC5B,OACE,yBAAKpB,UAAWS,IAAI,GAAD,OAAIqF,MACrB,yBAAK9F,UAAS,UAAK8F,GAAL,UACZ,0BAAM9F,UAAS,UAAK8F,GAAL,eAA0BU,IAE3C,yBAAKxG,UAAS,UAAK8F,GAAL,UACZ,yBAAK9F,UAAS,UAAK8F,GAAL,cACZ,kBAAC,EAAD,CAAW/B,YAAaA,KAE1B,yBAAK/D,UAAS,UAAK8F,GAAL,eAA0B1E,QCrB1C0E,I,YAAS,UAsBAW,GAhBkB5G,IAAMC,MAAK,SAAgBC,GAAQ,IAC1DC,EAAwBD,EAAxBC,UAAWoB,EAAarB,EAAbqB,SAD8C,EAEzCnB,oBAAkB,GAFuB,mBAE1DyG,EAF0D,KAEpDC,EAFoD,KAMjE,OACE,yBAAK3G,UAAWS,IAAI,GAAD,OAAIqF,IAAU9F,IAC/B,yBAAKA,UAAS,UAAK8F,GAAL,YAAuBpF,QALtB,WACjBiG,GAAQ,SAACnF,GAAD,OAAWA,OAKdkF,EAAO,eAAO,gBAEfA,EAA4D,KAArD,yBAAK1G,UAAS,UAAK8F,GAAL,UAAqB1E,OChB5C0E,GAAS,SAqBAc,GAbkB/G,IAAMC,MAAK,SAAgBC,GAC1D,IACQC,EAAwBD,EAAxBC,UAAW6G,EAAa9G,EAAb8G,GAAIC,EAAS/G,EAAT+G,KACvB,OACE,yBAAK9G,UAAWS,IAAI,GAAD,OAAIqF,IAAU9F,IAC/B,kBAAC,GAAD,CAAQA,UAAS,UAAK8F,GAAL,UAAqBgB,GACtC,kBAAC,GAAD,CAAQ9G,UAAS,UAAK8F,GAAL,QACf,yBAAKiB,wBAAyB,CAAEC,OAAQH,UCR1CI,GAAWC,kBAEjB,SAASC,GAAQ/C,GACf,MAAM,GAAN,OAAU6C,IAAV,OAAqB7C,GAGhB,IAAMQ,GAAWuC,GAAQ,SAC1B5C,GAAmB,CACvB,CACEH,KAAM6C,GACN5B,OAAQD,GACRE,YAAa,CAAEkB,MAAO,sBACtBd,aAAa,EACbtE,SAAU,CACR,CACEgD,KAAMQ,GACNpC,KAAM,OACNgD,UAAW,kBAAM,kBAAC,GAAD,CAAQqB,GAAIO,QAE/B,CACEhD,KAAM+C,GAAQ,cACd3E,KAAM,YACNgD,UAAW,kBAAM,kBAAC,GAAD,CAAQqB,GAAIzG,IAAW0G,KAAM,kBAAC,EAAD,UAEhD,CACE1C,KAAM+C,GAAQ,eACd3E,KAAM,aACNgD,UAAW,kBAAM,kBAAC,GAAD,CAAQqB,GAAI7D,IAAY8D,KAAM,kBAAC,EAAD,aAiBxCO,GAXI,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGxC,OAAyByC,EAAW/C,IACrC,kBAAC,IAAD,CAAUI,GAAIC,QC1CP2C,I,MAJO1H,IAAMC,MAAK,SAAaC,GAC5C,OAAO,kBAAC,GAAD,UCATyH,IAAS7B,OAAO,kBAAC,GAAD,MAAS8B,SAASC,eAAe,W","file":"static/js/main.321b8cdd.chunk.js","sourcesContent":["// Module\nvar code = \"<p>这个博客主要用来记录 react 学习中遇到的点点滴滴，巩固知识点。</p> <hr> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h1 id=\\\"useeffect、uselayouteffect\\\">useEffect、useLayoutEffect</h1> <hr> <p>useEffect 的作用和 componentDidMount 以及 componentDidUpdate 有点类似，只不过 useEffect 的粒度更细，可以在 useEffect 中控制一个流程的发起和销毁。具体用法可以查看<a href=\\\"https://zh-hans.reactjs.org/docs/hooks-effect.html\\\">官网</a>,这里主要讨论下 useEffect 和 componentDidMount/componentDidUpdate 的区别 以及 useEffect 和 useLayoutEffect 的区别。</p> <h2 id=\\\"useeffect-vs-componentdidmountcomponentdidupdate\\\">useEffect vs componentDidMount/componentDidUpdate</h2> <p>componentDidMount 是 class 组件初次渲染结束时执行的生命周期函数，是在 react 的 commit 阶段，紧接着组件渲染完后执行的，会阻塞浏览器的渲染，如果在其中执行耗时的任务，那在耗时任务结束前，页面是看不到更新的，componentDidUpdate 和 componentDidMount 的行为差不多，只是执行的时机不是初次渲染。</p> <p>useEffect 有三个重要的组成，处理函数、依赖、销毁函数（处理函数返回的函数），每当依赖发生变化都会先执行上一次生成的销毁函数再执行新的处理函数。</p> <p><strong>useEffect 不会阻塞浏览器的渲染</strong>，因为 useEffect 是等到 commit 完成后，再在另一个宏任务中执行的，这个宏任务是通过 messageChannel 的 postMessage 触发的 j 具体细节可查看 react schedule 模块的实现。</p> <h2 id=\\\"useeffect-vs-uselayouteffect\\\">useEffect vs useLayoutEffect</h2> <p>事实上百分之 99%的场景使用 useEffect 和 useLayoutEffect 的效果是一样的, 不同点是，useLayoutEffect 的表现和 componentDidUpdate 一样，会阻塞浏览器的渲染,具体可参考<a href=\\\"https://codesandbox.io/s/useeffect-vs-uselayouteffect-gtvim\\\">useEffect</a>,可以发现使用 useEffect 时红色数字 1 会一闪而过，useLayoutEffect 不会出现这种现象。</p> <p><img src=\\\"/react-markdown/assets/useEffect.png\\\" alt=\\\"github\\\" width=\\\"80%\\\" style=\\\"margin:auto;display:block\\\"></p> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"\";\n// Exports\nmodule.exports = code;","import React, { useCallback, useEffect, useState } from 'react';\nimport cls from 'classnames';\n\nconst PREFIX = 'useEffectView';\n\ninterface IProps {\n  className?: string;\n}\n\nconst UseEffectView: React.FC<IProps> = React.memo(function useEffectView(props) {\n  const { className } = props;\n  const [count, setCount] = useState<number>(0);\n  useEffect(() => {\n    console.log(count);\n    return () => {\n      console.log('unmount effect');\n    };\n  }, [count]);\n\n  const handleClick = useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n  return (\n    <div className={cls(`${PREFIX}`, className)} onClick={handleClick}>\n      {count}\n    </div>\n  );\n});\n\nexport default UseEffectView;\n","import styled from 'styled-components';\nimport React, { useCallback, useState } from 'react';\nexport const Scene = styled.div`\n  background-color: #f4f9fe;\n  margin-top: 20px;\n  padding: 16px 20px;\n`;\n\nexport const Panel = styled.div`\n  border: 2px solid #2196f3;\n  padding: 16px 20px;\n  margin: 10px 0;\n`;\n\nexport const H3 = styled.div`\n  font-size: 16px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\nexport const H2 = styled.div`\n  font-size: 20px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\nexport const H1 = styled.div`\n  font-size: 24px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\nexport const Button = styled.div`\n  font-size: 12px;\n  background-color: #e6ecf1;\n  padding: 4px 8px;\n  cursor: pointer;\n  line-height: 12px;\n  font-weight: 600;\n  user-select: none;\n`;\nconst Conclusion: React.FC = React.memo(function Conclusion(props) {\n  const { children } = props;\n  const [visible, setVisible] = useState<boolean>(false);\n  const handleOpen = useCallback(() => {\n    setVisible((prev) => !prev);\n  }, []);\n  return (\n    <div\n      style={{\n        position: 'relative',\n        borderTop: '2px solid #e6ecf1',\n        backgroundColor: '#f4f9fe',\n        padding: '10px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n\n          height: '20px',\n          textAlign: 'right',\n          fontSize: '12px',\n          lineHeight: '20px',\n        }}\n        onClick={handleOpen}\n      >\n        <H3>结论</H3>\n\n        <Button>{visible ? '收起' : '展开'}</Button>\n      </div>\n      {visible && <div style={{ padding: '16px 20px' }}>{children}</div>}\n    </div>\n  );\n});\n\nexport default Conclusion;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\n\nconst countContext = React.createContext<{ count?: string }>({ count: '' });\ncountContext.displayName = 'Count';\n\nconst First: React.FC = React.memo(function First(props) {\n  const [count, setCount] = useState<string>('1');\n  const [name, setName] = useState<string>('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n\n  const handleChangeCount = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value);\n  };\n  return (\n    <>\n      <Scene>\n        <countContext.Provider value={{ count }}>\n          <H1>场景1: 验证在什么情况接收人会响应更新</H1>\n          <div>\n            <span>name：</span>\n            <input value={name} onChange={handleChange} />\n          </div>\n          <Panel>\n            <H2>context</H2>\n            <span>count：</span>\n            <input value={count} onChange={handleChangeCount} />\n            <Receiver />\n          </Panel>\n        </countContext.Provider>\n      </Scene>\n      <Conclusion>context属性的值或者引用变了，接收者才能拿到更新</Conclusion>\n    </>\n  );\n});\n\nexport default First;\n\nconst Receiver: React.FC = React.memo(function Receiver() {\n  const { count } = useContext(countContext);\n  const renderCount = useRef<number>(1);\n  useEffect(() => {\n    renderCount.current += 1;\n  });\n  return (\n    <Panel>\n      <H2>我是接收人</H2>\n      收到的count：{count}\n      <div>收到通知的次数：{renderCount.current}</div>\n    </Panel>\n  );\n});\n","import React, { useContext } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\n\nconst countContext = React.createContext<{ count: number }>({ count: 0 });\n\nconst Second: React.FC = React.memo(function Second(props) {\n  return (\n    <>\n      <Scene>\n        <H1>场景2: 同一个context提供多个嵌套的provider，接收者接收到的是哪个provider的数据？</H1>\n        <Panel>\n          <H2>context: </H2>\n          count: 0\n          <countContext.Provider value={{ count: 1 }}>\n            <Panel>\n              <H2>provider1:</H2>\n              count: 1\n              <countContext.Provider value={{ count: 2 }}>\n                <Panel>\n                  <H2>provider2:</H2>\n                  count: 2\n                  <Receiver />\n                </Panel>\n              </countContext.Provider>\n              <Receiver />\n            </Panel>\n          </countContext.Provider>\n          <Receiver />\n        </Panel>\n      </Scene>\n      <Conclusion>就近原则</Conclusion>\n    </>\n  );\n});\n\nexport default Second;\n\nconst Receiver: React.FC = React.memo(function Receiver(props) {\n  const { count } = useContext(countContext);\n  return (\n    <Panel>\n      <H2>我是接收人</H2>\n      收到的count：{count}\n    </Panel>\n  );\n});\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\n\nconst countContext = React.createContext<{ fish?: number; fruit?: number }>({});\n\nconst Third: React.FC = React.memo(function Third(props) {\n  const [fish, setFish] = useState<number>();\n  const [fruit, setFruit] = useState<number>();\n\n  const handleChangeFish = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFish(~~e.target.value);\n  };\n  const handleChangeFruit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFruit(~~e.target.value);\n  };\n  return (\n    <>\n      <Scene>\n        <countContext.Provider value={{ fish, fruit }}>\n          <H1>\n            场景3: 当context其中一个属性变化时，所有接收者是否都会触发re-render 即使没有使用该属性？\n          </H1>\n\n          <Panel>\n            <H2>批发市场（context）</H2>\n            <div>\n              <span>鱼：</span>\n              <input value={fish} onChange={handleChangeFish} />\n            </div>\n            <div>\n              <span>水果：</span>\n              <input value={fruit} onChange={handleChangeFruit} />\n            </div>\n            <FishReceiver />\n            <FruitReceiver />\n          </Panel>\n        </countContext.Provider>\n      </Scene>\n      <Conclusion>\n        当context其中一个属性变化时，所有接收者是否都会触发re-render 即使没有使用该属性。\n        <div>有没有破解之法？</div>\n      </Conclusion>\n    </>\n  );\n});\n\nexport default Third;\n\nconst FishReceiver: React.FC = React.memo(function Receiver(props) {\n  const { fish } = useContext(countContext);\n  const renderCount = useRef<number>(1);\n  useEffect(() => {\n    renderCount.current += 1;\n  });\n\n  return (\n    <Panel>\n      <H2>水产商人：</H2>\n      当前鱼总数：{fish}\n      <div>收到通知的次数：{renderCount.current}</div>\n    </Panel>\n  );\n});\n\nconst FruitReceiver: React.FC = React.memo(function Receiver(props) {\n  const { fruit } = useContext(countContext);\n  const renderCount = useRef<number>(1);\n  useEffect(() => {\n    renderCount.current += 1;\n  });\n  return (\n    <Panel>\n      <H2>水果商人：</H2>\n      当前水果总数：{fruit}\n      <div>收到通知的次数：{renderCount.current}</div>\n    </Panel>\n  );\n});\n","import React from 'react';\nimport First from './scene/first';\nimport Second from './scene/second';\nimport Third from './scene/third';\n\nconst UseContext: React.FC = React.memo(function UseContext(props) {\n  return (\n    <div>\n      <First />\n      <Second />\n      <Third />\n    </div>\n  );\n});\n\nexport default UseContext;\n","import { IRoute } from './interface';\nimport { find } from 'lodash';\n\nexport const recoverPath: (currentRoute?: IRoute, childRoutes?: IRoute[]) => string = (\n  currentRoute,\n  childRoutes,\n) => {\n  if (currentRoute && childRoutes?.length) {\n    const matchedChildRoute = find(\n      childRoutes,\n      (route) => route.path === currentRoute?.lastChildRoutePath,\n    );\n\n    const nextRoute = matchedChildRoute || childRoutes[0];\n    return recoverPath(nextRoute, nextRoute.children);\n  }\n  return currentRoute?.path || '';\n};\n","import { IRoute } from './interface';\nimport { Redirect, Route, RouteComponentProps, RouteProps, Switch } from 'react-router-dom';\nimport { map } from 'lodash';\nimport { recoverPath } from './util';\nimport React from 'react';\nimport { homePath } from '.';\n\ntype IRouteWithLayoutProps = Omit<RouteProps, 'component' | 'render' | 'children'> & {\n  childrenRender: React.ReactNode;\n  childRoutes?: IRoute[];\n  parentRoute?: IRoute;\n  route?: IRoute;\n} & Partial<IRoute>;\n\nconst RedirectRoute: React.FC<\n  Partial<RouteComponentProps> & {\n    routes?: IRoute[];\n    route?: IRoute;\n  }\n> = React.memo(function ({ route, routes, location }) {\n  const { pathname } = location || {};\n  const redirectUrl = recoverPath(route, routes);\n  if (redirectUrl !== pathname) {\n    return <Redirect to={redirectUrl || homePath} />;\n  }\n  return <Redirect to={homePath} />;\n});\n\nexport const renderRouterWithChildren = (\n  route: IRoute | undefined,\n  children?: IRoute[],\n  parentRoute?: IRoute,\n) => {\n  const childrenRender = children ? (\n    <Switch>\n      {map(children, (child, index) => {\n        return renderRouterWithChildren(child, child.children, route);\n      })}\n      <RedirectRoute routes={children} route={route} />\n    </Switch>\n  ) : null;\n\n  return (\n    <CustomerRoute\n      childrenRender={childrenRender}\n      {...route}\n      route={route}\n      parentRoute={parentRoute}\n      childRoutes={children}\n    />\n  );\n};\n\nconst CustomerRoute: React.FC<IRouteWithLayoutProps> = React.memo(function CustomerRoute(props) {\n  const {\n    childrenRender,\n    route,\n    parentRoute,\n    childRoutes,\n    layout: Layout,\n    layoutProps,\n    children,\n    component: RouterComponent,\n    ...restProps\n  } = props;\n\n  if (parentRoute && !parentRoute.ignoreCache) {\n    parentRoute.lastChildRoutePath = route?.path;\n  }\n  if (!route) {\n    return childrenRender as React.ReactElement;\n  }\n\n  if (!childRoutes) {\n    if (RouterComponent) {\n      if (Layout) {\n        return (\n          <PrivateRoute\n            {...restProps}\n            render={() => (\n              <Layout route={route} {...layoutProps}>\n                <RouterComponent {...restProps} />\n              </Layout>\n            )}\n          />\n        );\n      }\n      return <PrivateRoute {...restProps} render={() => <RouterComponent {...restProps} />} />;\n    }\n  }\n\n  if (childRoutes) {\n    if (Layout) {\n      return (\n        <PrivateRoute\n          {...restProps}\n          render={() => (\n            <Layout childRoutes={childRoutes} route={route} {...layoutProps}>\n              {childrenRender}\n            </Layout>\n          )}\n        />\n      );\n    }\n  }\n  return childrenRender as React.ReactElement;\n});\ntype PrivateRouteProps = Required<Pick<RouteProps, 'render'>> &\n  Omit<RouteProps, 'component' | 'render'>;\nexport const PrivateRoute = ({ render, ...rest }: PrivateRouteProps) => {\n  return <Route {...rest} render={render} />;\n};\n","import { Link } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { useLocation } from 'react-router';\nimport React, { useMemo } from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../../router/interface';\n\nconst PREFIX = 'Mavigator';\n\ninterface IProps {\n  className?: string;\n  childRoutes: IRoute[];\n}\n\nconst useRouterPathMatch = (routers: IRoute[]) => {\n  const location = useLocation();\n  const router = useMemo(() => {\n    return find(routers, (router) => location.pathname.includes(router.path));\n  }, [location.pathname, routers]);\n  return router?.path;\n};\n\nconst Mavigator: React.FC<IProps> = React.memo(function AppThirdNavigator(props) {\n  const { className, childRoutes } = props;\n  const matchedPath = useRouterPathMatch(childRoutes);\n\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      {childRoutes.map((router) =>\n        matchedPath === router.path ? (\n          <span className={cls(`${PREFIX}-item`, 'is-active')}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </span>\n        ) : (\n          <Link className={cls(`${PREFIX}-item`)} key={router.path} to={router.path}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </Link>\n        ),\n      )}\n    </div>\n  );\n});\n\nexport default Mavigator;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../router/interface';\nimport Navigator from './Navigator';\n\nconst PREFIX = 'Layout';\n\ninterface IProps {\n  title?: React.ReactNode;\n  route?: IRoute;\n  childRoutes: IRoute[];\n}\n\nconst Layout: React.FC<IProps> = React.memo(function Layout(props) {\n  const { title, childRoutes, children } = props;\n  return (\n    <div className={cls(`${PREFIX}`)}>\n      <div className={`${PREFIX}-head`}>\n        <span className={`${PREFIX}-headTitle`}>{title}</span>\n      </div>\n      <div className={`${PREFIX}-body`}>\n        <div className={`${PREFIX}-bodyLeft`}>\n          <Navigator childRoutes={childRoutes} />\n        </div>\n        <div className={`${PREFIX}-bodyRight`}>{children}</div>\n      </div>\n    </div>\n  );\n});\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport cls from 'classnames';\nimport './index.less';\n\nconst PREFIX = 'Folder';\n\ninterface IProps {\n  className?: string;\n}\n\nconst Folder: React.FC<IProps> = React.memo(function Folder(props) {\n  const { className, children } = props;\n  const [fold, setFold] = useState<boolean>(false);\n  const handleFold = () => {\n    setFold((prev) => !prev);\n  };\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <div className={`${PREFIX}-foldBtn`} onClick={handleFold}>\n        {fold ? '展开' : '收起'}\n      </div>\n      {!fold ? <div className={`${PREFIX}-body`}>{children}</div> : null}\n    </div>\n  );\n});\n\nexport default Folder;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport Folder from '../Layout/Folder';\n\nconst PREFIX = 'MdView';\n\ninterface IProps {\n  className?: string;\n  md: string;\n  view?: React.ReactNode;\n}\n\nconst MdView: React.FC<IProps> = React.memo(function MdView(props) {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const { className, md, view } = props;\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <Folder className={`${PREFIX}-body`}>{view}</Folder>\n      <Folder className={`${PREFIX}-md`}>\n        <div dangerouslySetInnerHTML={{ __html: md }}></div>\n      </Folder>\n    </div>\n  );\n});\n\nexport default MdView;\n","import home from '../md/home/index.md';\nimport useEffect from '../md/useEffect/index.md';\nimport UseEffectView from '../md/useEffect';\nimport useContext from '../md/useContext/index.md';\nimport UseContextView from '../md/useContext';\nimport { Switch, Redirect, BrowserRouter } from 'react-router-dom';\nimport { renderRouterWithChildren } from './routeWithLayout';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport MdView from '../components/MdView';\nimport { IRoute } from './interface';\n\nconst WEB_ROOT = process.env.WEB_ROOT || '/';\n\nfunction getPath(path: string) {\n  return `${WEB_ROOT}${path}`;\n}\n\nexport const homePath = getPath('/home');\nconst routes: IRoute[] = [\n  {\n    path: WEB_ROOT,\n    layout: Layout,\n    layoutProps: { title: 'react 解析' },\n    ignoreCache: true,\n    children: [\n      {\n        path: homePath,\n        name: 'home',\n        component: () => <MdView md={home} />,\n      },\n      {\n        path: getPath('/useEffect'),\n        name: 'useEffect',\n        component: () => <MdView md={useEffect} view={<UseEffectView />} />,\n      },\n      {\n        path: getPath('/useContext'),\n        name: 'useContext',\n        component: () => <MdView md={useContext} view={<UseContextView />} />,\n      },\n    ],\n  },\n];\n\nconst RootRouter = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {renderRouterWithChildren(undefined, routes)}\n        <Redirect to={homePath} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RootRouter;\n","import React from 'react';\nimport RootRouter from './router';\nimport './index.less';\n\nconst App: React.FC = React.memo(function App(props) {\n  return <RootRouter />;\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Demo from './md/useContext/scene/demo';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Demo />, document.getElementById('root'));\n"],"sourceRoot":""}