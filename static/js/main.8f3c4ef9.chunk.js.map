{"version":3,"sources":["md/home/index.md","md/useEffect/index.md","md/useContext/index.md","md/useEffect/index.tsx","components/Common/index.tsx","md/useContext/scene/first.tsx","md/useContext/DataProvider.tsx","md/useContext/scene/fourth.tsx","md/useContext/scene/second.tsx","md/useContext/scene/third.tsx","md/useContext/index.tsx","md/meet/Schedule/Scale/index.tsx","md/meet/Schedule/util.ts","md/meet/Schedule/Slide/index.tsx","md/meet/useForceUpdate.ts","md/meet/Schedule/index.tsx","md/meet/index.tsx","router/util.ts","router/routeWithLayout.tsx","components/Layout/Navigator/index.tsx","components/Layout/index.tsx","components/Layout/Folder/index.tsx","components/MdView/index.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["module","exports","UseEffectView","React","memo","props","className","useState","count","setCount","useEffect","console","log","handleClick","useCallback","cls","onClick","Scene","styled","div","Panel","H3","H2","H1","Button","Conclusion","children","visible","setVisible","handleOpen","prev","style","position","borderTop","backgroundColor","padding","display","justifyContent","height","textAlign","fontSize","lineHeight","countContext","createContext","displayName","First","name","setName","Provider","value","onChange","e","target","Receiver","useContext","renderCount","useRef","current","DataProvider","params","Component","as","Fourth","fish","setFish","fruit","setFruit","FishReceiver","FruitReceiver","Second","Third","UseContext","PREFIX","Scale","max","min","step","scales","useMemo","data","cursor","index","push","length","text","textVisible","map","scale","left","top","formatTime","n","s","slice","transformNum2Time","hour","Math","floor","minutes","setDocumentCursor","document","body","Slide","steps","wrapRef","handleRangeChange","ref","wrapWidth","Slice","forceUpdate","useReducer","useForceUpdate","cache","isActive","setIsActive","range","start","end","styles","right","stopPropagation","handleDrag","type","currentTarget","dataset","startX","clientX","moveMove","currentX","offset","nextLeft","nextRight","addEventListener","moveUp","removeEventListener","onMouseDown","data-type","SchedulePanel","MeetPage","recoverPath","currentRoute","childRoutes","nextRoute","find","route","path","lastChildRoutePath","RedirectRoute","routes","pathname","location","redirectUrl","to","homePath","renderRouterWithChildren","parentRoute","childrenRender","child","CustomerRoute","Layout","layout","layoutProps","RouterComponent","component","restProps","ignoreCache","render","PrivateRoute","rest","Mavigator","matchedPath","routers","useLocation","router","includes","useRouterPathMatch","key","title","Folder","fold","setFold","MdView","md","view","dangerouslySetInnerHTML","__html","WEB_ROOT","process","getPath","home","RootRouter","undefined","App","ReactDOM","getElementById"],"mappings":"wGAGAA,EAAOC,QAFI,0L,iBCEXD,EAAOC,QAFI,unG,iBCEXD,EAAOC,QAFI,I,8UC4BIC,EApByBC,IAAMC,MAAK,SAAuBC,GAAQ,IACxEC,EAAcD,EAAdC,UADuE,EAErDC,mBAAiB,GAFoC,mBAExEC,EAFwE,KAEjEC,EAFiE,KAG/EC,qBAAU,WAER,OADAC,QAAQC,IAAIJ,GACL,WACLG,QAAQC,IAAI,qBAEb,CAACJ,IAEJ,IAAMK,EAAcC,uBAAY,WAC9BL,EAASD,EAAQ,KAChB,CAACA,IACJ,OACE,yBAAKF,UAAWS,IAAI,GAAD,OApBR,iBAoBsBT,GAAYU,QAASH,GACnDL,M,gCCtBMS,EAAQC,IAAOC,IAAV,sGAMLC,EAAQF,IAAOC,IAAV,oGAMLE,EAAKH,IAAOC,IAAV,4FAKFG,EAAKJ,IAAOC,IAAV,4FAKFI,EAAKL,IAAOC,IAAV,4FAKFK,EAASN,IAAOC,IAAV,wLA6CJM,EApCctB,IAAMC,MAAK,SAAoBC,GAAQ,IAC1DqB,EAAarB,EAAbqB,SADyD,EAEnCnB,oBAAkB,GAFiB,mBAE1DoB,EAF0D,KAEjDC,EAFiD,KAG3DC,EAAaf,uBAAY,WAC7Bc,GAAW,SAACE,GAAD,OAAWA,OACrB,IACH,OACE,yBACEC,MAAO,CACLC,SAAU,WACVC,UAAW,oBACXC,gBAAiB,UACjBC,QAAS,SAGX,yBACEJ,MAAO,CACLK,QAAS,OACTC,eAAgB,gBAEhBC,OAAQ,OACRC,UAAW,QACXC,SAAU,OACVC,WAAY,QAEdzB,QAASa,GAET,kBAACR,EAAD,qBAEA,kBAACG,EAAD,KAASG,EAAU,eAAO,iBAE3BA,GAAW,yBAAKI,MAAO,CAAEI,QAAS,cAAgBT,OClEnDgB,EAAevC,IAAMwC,cAAkC,CAAEnC,MAAO,KACtEkC,EAAaE,YAAc,QAE3B,IAiCeC,EAjCS1C,IAAMC,MAAK,SAAeC,GAAQ,IAAD,EAC7BE,mBAAiB,KADY,mBAChDC,EADgD,KACzCC,EADyC,OAE/BF,mBAAiB,IAFc,mBAEhDuC,EAFgD,KAE1CC,EAF0C,KAWvD,OACE,oCACE,kBAAC9B,EAAD,KACE,kBAACyB,EAAaM,SAAd,CAAuBC,MAAO,CAAEzC,UAC9B,kBAACe,EAAD,kHACA,6BACE,4CACA,2BAAO0B,MAAOH,EAAMI,SAdT,SAACC,GACpBJ,EAAQI,EAAEC,OAAOH,WAeX,kBAAC7B,EAAD,KACE,kBAACE,EAAD,gBACA,6CACA,2BAAO2B,MAAOzC,EAAO0C,SAfL,SAACC,GACzB1C,EAAS0C,EAAEC,OAAOH,UAeV,kBAAC,EAAD,SAIN,kBAAC,EAAD,4IAOAI,EAAqBlD,IAAMC,MAAK,WAAqB,IACjDI,EAAU8C,qBAAWZ,GAArBlC,MACF+C,EAAcC,iBAAe,GAInC,OAHA9C,qBAAU,WACR6C,EAAYE,SAAW,KAGvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,gCAEYd,EACV,gFAAc+C,EAAYE,aCjDjB,SAASC,EACtBC,EACAC,GAEA,OAAOzD,IAAMC,MAAK,SAACC,GACjB,OAAQ,kBAACuD,EAAD,eAAWC,IAAE,GAAKxD,EAAWsD,SCHzC,IAAMjB,EAAevC,IAAMwC,cAAiD,IAwC7DmB,EAtCU3D,IAAMC,MAAK,SAAeC,GAAQ,IAAD,EAChCE,qBADgC,mBACjDwD,EADiD,KAC3CC,EAD2C,OAE9BzD,qBAF8B,mBAEjD0D,EAFiD,KAE1CC,EAF0C,KAUxD,OACE,oCACE,kBAACjD,EAAD,KACE,kBAAC,EAAa+B,SAAd,CAAuBC,MAAO,CAAEc,OAAME,UACpC,kBAAC1C,EAAD,0IAEA,kBAACH,EAAD,KACE,kBAACE,EAAD,oDACA,6BACE,8CACA,2BAAO2B,MAAOc,EAAMb,SAhBP,SAACC,GACxBa,IAAUb,EAAEC,OAAOH,WAiBX,6BACE,oDACA,2BAAOA,MAAOgB,EAAOf,SAjBP,SAACC,GACzBe,IAAWf,EAAEC,OAAOH,WAkBZ,kBAACkB,EAAD,MACA,kBAACC,EAAD,SAIN,kBAAC,EAAD,iNASAD,EAAyBT,GAC7B,WAEE,MAAO,CAAEK,KADQT,qBAAWZ,GAApBqB,QAGV5D,IAAMC,MAAK,YAA6B,IAAT2D,EAAQ,EAARA,KACvBR,EAAcC,iBAAe,GAKnC,OAJA9C,qBAAU,WACR6C,EAAYE,SAAW,KAIvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,uCAESyC,EACP,gFAAcR,EAAYE,cAM5BW,EAA0BV,GAC9B,WAEE,MAAO,CAAEO,MADSX,qBAAWZ,GAArBuB,SAGV9D,IAAMC,MAAK,YAA8B,IAAV6D,EAAS,EAATA,MACvBV,EAAcC,iBAAe,GAInC,OAHA9C,qBAAU,WACR6C,EAAYE,SAAW,KAGvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,6CAEU2C,EACR,gFAAcV,EAAYE,cC9E5Bf,EAAevC,IAAMwC,cAAiC,CAAEnC,MAAO,IAgCtD6D,EA9BUlE,IAAMC,MAAK,SAAgBC,GAClD,OACE,oCACE,kBAACY,EAAD,KACE,kBAACM,EAAD,qMACA,kBAACH,EAAD,KACE,kBAACE,EAAD,kBADF,WAGE,kBAAC,EAAa0B,SAAd,CAAuBC,MAAO,CAAEzC,MAAO,IACrC,kBAACY,EAAD,KACE,kBAACE,EAAD,mBADF,WAGE,kBAAC,EAAa0B,SAAd,CAAuBC,MAAO,CAAEzC,MAAO,IACrC,kBAACY,EAAD,KACE,kBAACE,EAAD,mBADF,WAGE,kBAAC,EAAD,QAGJ,kBAAC,EAAD,QAGJ,kBAAC,EAAD,QAGJ,kBAAC,EAAD,qCAOA+B,EAAqBlD,IAAMC,MAAK,SAAkBC,GAAQ,IACtDG,EAAU8C,qBAAWZ,GAArBlC,MACR,OACE,kBAACY,EAAD,KACE,kBAACE,EAAD,uCADF,gCAEYd,MCvCVkC,EAAevC,IAAMwC,cAAiD,IA2C7D2B,EAzCSnE,IAAMC,MAAK,SAAeC,GAAQ,IAAD,EAC/BE,qBAD+B,mBAChDwD,EADgD,KAC1CC,EAD0C,OAE7BzD,qBAF6B,mBAEhD0D,EAFgD,KAEzCC,EAFyC,KAUvD,OACE,oCACE,kBAACjD,EAAD,KACE,kBAAC,EAAa+B,SAAd,CAAuBC,MAAO,CAAEc,OAAME,UACpC,kBAAC1C,EAAD,yOAIA,kBAACH,EAAD,KACE,kBAACE,EAAD,oDACA,6BACE,8CACA,2BAAO2B,MAAOc,EAAMb,SAlBP,SAACC,GACxBa,IAAUb,EAAEC,OAAOH,WAmBX,6BACE,oDACA,2BAAOA,MAAOgB,EAAOf,SAnBP,SAACC,GACzBe,IAAWf,EAAEC,OAAOH,WAoBZ,kBAAC,EAAD,MACA,kBAAC,EAAD,SAIN,kBAAC,EAAD,yNAEE,sFAQFkB,EAAyBhE,IAAMC,MAAK,SAAkBC,GAAQ,IAC1D0D,EAAST,qBAAWZ,GAApBqB,KACFR,EAAcC,iBAAe,GAKnC,OAJA9C,qBAAU,WACR6C,EAAYE,SAAW,KAIvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,uCAESyC,EACP,gFAAcR,EAAYE,aAK1BW,EAA0BjE,IAAMC,MAAK,SAAkBC,GAAQ,IAC3D4D,EAAUX,qBAAWZ,GAArBuB,MACFV,EAAcC,iBAAe,GAInC,OAHA9C,qBAAU,WACR6C,EAAYE,SAAW,KAGvB,kBAACrC,EAAD,KACE,kBAACE,EAAD,uCADF,6CAEU2C,EACR,gFAAcV,EAAYE,aCzDjBc,EAXcpE,IAAMC,MAAK,SAAoBC,GAC1D,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCRAmE,G,YAAS,mBA0CAC,EAzCyEtE,IAAMC,MAC5F,SAAeC,GAAQ,IACbqE,EAA8BrE,EAA9BqE,IAAKC,EAAyBtE,EAAzBsE,IAAKC,EAAoBvE,EAApBuE,KAAMtE,EAAcD,EAAdC,UAElBuE,EAASC,mBAAQ,WAIrB,IAHA,IAAIC,EAAqF,GACrFC,EAASL,EACTM,EAAQ,EACLD,GAAUN,GACfK,EAAKG,KAAK,CACRjC,MAAO+B,EACPG,OAAQH,EAASN,EACjBU,KAAMJ,EACNK,cAAeJ,EAAQ,KAEzBA,IACAD,GAAUJ,EAEZ,OAAOG,IACN,CAACL,EAAKC,EAAKC,IACd,OACE,yBAAKtE,UAAWS,IAAIT,EAAD,UAAekE,KAC/BK,EAAOS,KAAI,SAACC,GAAD,OACV,yBACEjF,UAAS,UAAKkE,EAAL,QACTzC,MAAO,CACLC,SAAU,WACVwD,KAAK,GAAD,OAAoB,IAAfD,EAAMJ,OAAX,KACJM,IAAK,IAGP,0BAAMnF,UAAWS,IAAI,GAAD,OAAIyD,EAAJ,YAAsB,CAAE,aAAce,EAAMF,eAC7DE,EAAMH,cCjCrB,SAASM,EAAWC,GAClB,IAAMC,EAAI,KAAOD,EACjB,OAAOC,EAAEC,MAAMD,EAAET,OAAS,GAGrB,SAASW,EAAkBH,GAChC,IAAMI,EAAOC,KAAKC,MAAMN,EAAI,IACtBO,EAAUP,EAAI,GAEpB,MAAM,GAAN,OAAUD,EAAWK,GAArB,YAA8BL,EAAWQ,GAAzC,O,UCNI1B,EAAS,QAWf,SAAS2B,EAAkBnB,GACzBoB,SAASC,KAAKtE,MAAMiD,OAASA,EAE/B,IAuBesB,GAvBiBnG,IAAMC,MAAK,SAAeC,GAAQ,IACxDC,EAAoDD,EAApDC,UADuD,EACHD,EAAzCkG,aAD4C,MACpC,KADoC,EACvBV,EAAoBxF,EAA3B4C,MAAcC,EAAa7C,EAAb6C,SACzCsD,EAAUhD,iBAAuB,MAEvC9C,qBAAU,cAAU,IACpB,IAAM+F,EAAoB3F,uBACxB,SAACmC,GACKA,IACM,OAARC,QAAQ,IAARA,KAAWD,MAGf,CAACC,IAGH,OACE,yBAAK5C,UAAWS,IAAI,GAAD,OAAIyD,GAAUlE,GAAYoG,IAAKF,GAC/CX,GACC,kBAAC,GAAD,CAAO5C,MAAO4C,EAAOU,MAAOA,EAAOI,UAtB7B,KAsB+CzD,SAAUuD,QAmBjEG,GAA0BzG,IAAMC,MAAK,SAAeC,GAAQ,IACxDC,EAAiDD,EAAjDC,UAAWiG,EAAsClG,EAAtCkG,MAAOtD,EAA+B5C,EAA/B4C,MAAO0D,EAAwBtG,EAAxBsG,UAAWzD,EAAa7C,EAAb6C,SACtC2D,EC1DsB,WAAO,IAAD,EACZC,sBACpB,SAAA7D,GAAK,OAAIA,EAAQ,IACjB,GACA,SAAAA,GAAK,OAAIA,KAEX,OANkC,oBD0Dd8D,GAEdC,EAAQxD,iBAAeP,GAJkC,EAK/B1C,oBAAkB,GALa,mBAKxD0G,EALwD,KAK9CC,EAL8C,KAM/DpC,mBAAQ,WACNkC,EAAMvD,QAAUR,IACf,CAACA,IAR2D,IDhC7BkE,ECgC6B,cAU1CH,EAAMvD,QAVoC,GAUxD2D,EAVwD,KAUjDC,EAViD,KAYzDC,EAASxC,mBAAQ,WACrB,MAAO,CACLU,KAAK,GAAD,OAAM4B,EAAQb,EAAS,IAAvB,KACJgB,MAAM,GAAD,OAAyB,KAAnB,EAAIF,EAAMd,GAAhB,QAEN,CAACc,EAAKD,EAAOb,IAEV1F,EAAcC,uBAAY,SAACqC,GAC/BA,EAAEqE,kBACFN,GAAY,SAACpF,GAAD,OAAWA,OACtB,IAEG2F,EAAa3G,uBACjB,SAACqC,GACCA,EAAEqE,kBAEF,IAAME,EAAOvE,EAAEwE,cAAcC,QAAQF,KAE/BG,EAAS1E,EAAE2E,QACjB,SAASC,EAAS5E,GAChB,IAAI6E,EAAW7E,EAAE2E,QACfG,EAAUjC,KAAKC,MAAM+B,EAAWH,GAAUlB,EAAaJ,EACvD2B,EAAWlB,EAAMvD,QAAQ,GACzB0E,EAAYnB,EAAMvD,QAAQ,GAEf,SAATiE,GACFQ,GAAYD,EACZC,EAAWlC,KAAKrB,IAAIqB,KAAKtB,IAAI,EAAGwD,GAAWC,KAE3CA,GAAaF,EACbE,EAAYnC,KAAKrB,IAAI4B,EAAOP,KAAKtB,IAAIyD,EAAWD,KAElD/B,EAAkB,YAClBa,EAAMvD,QAAU,CAACyE,EAAUC,GAE3BtB,IASFT,SAASgC,iBAAiB,YAAaL,GACvC3B,SAASgC,iBAAiB,WAP1B,SAASC,IACC,OAARnF,QAAQ,IAARA,KAAW8D,EAAMvD,SACjB2C,SAASkC,oBAAoB,YAAaP,GAC1C3B,SAASkC,oBAAoB,UAAWD,GACxClC,EAAkB,gBAKtB,CAACU,EAAa3D,EAAUqD,EAAOI,IAGjC,OACE,yBAAK5E,MAAOuF,EAAQhH,UAAS,UAAKkE,EAAL,cAC3B,yBACElE,UAAWS,IAAI,GAAD,OAAIyD,EAAJ,UAAoBlE,EAAW,CAAE,YAAa2G,IAC5DsB,YAAa1H,GAEb,0BACEP,UAAWS,IAAI,GAAD,OAAIyD,EAAJ,kBAA4B,CAAE,aAAcyC,IAC1DuB,YAAU,OACVD,YAAad,IAEf,0BACEnH,UAAWS,IAAI,GAAD,OAAIyD,EAAJ,mBAA6B,CAAE,aAAcyC,IAC3DuB,YAAU,QACVD,YAAad,IAEf,yBAAKnH,UAAWS,IAAI,GAAD,OAAIyD,EAAJ,aAAuB,CAAE,aAAcyC,MD9G9BE,EC+GLH,EAAMvD,QD9G7B,GAAN,OAAUqC,EAAkBqB,EAAM,IAAlC,YAAyCrB,EAAkBqB,EAAM,YGnB7D3C,I,MAAS,iBAiBAiE,GAVyBtI,IAAMC,MAAK,SAAoBC,GAAQ,IACrEC,EAAwBD,EAAxBC,UAAwBD,EAAb6C,SACnB,OACE,yBAAK5C,UAAWS,IAAI,GAAD,OAAIyD,IAAUlE,IAC/B,kBAAC,EAAD,CAAOA,UAAS,UAAKkE,GAAL,UAAqBE,IAAK,GAAIC,IAAK,EAAGC,KAAM,IAC5D,kBAAC,GAAD,CAAO3B,MAAO,CAAC,EAAG,GAAIsD,MAAO,WCCpBmC,GAToBvI,IAAMC,MAAK,SAAkBC,GAAQ,IAC9DC,EAAcD,EAAdC,UACR,OACE,yBAAKA,UAAWS,IAAI,GAAD,OATR,YASsBT,IAC/B,kBAAC,GAAD,U,mCCZOqI,GAAyE,SAAzEA,EACXC,EACAC,GAEA,GAAID,IAAY,OAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAa1D,QAAQ,CACvC,IAKM2D,EALoBC,gBACxBF,GACA,SAACG,GAAD,OAAWA,EAAMC,QAAN,OAAeL,QAAf,IAAeA,OAAf,EAAeA,EAAcM,wBAGHL,EAAY,GACnD,OAAOF,EAAYG,EAAWA,EAAUpH,UAE1C,OAAmB,OAAZkH,QAAY,IAAZA,OAAA,EAAAA,EAAcK,OAAQ,ICFzBE,GAKFhJ,IAAMC,MAAK,YAAwC,IAA5B4I,EAA2B,EAA3BA,MAAOI,EAAoB,EAApBA,OACxBC,GAD4C,EAAZC,UACP,IAAzBD,SACFE,EAAcZ,GAAYK,EAAOI,GACvC,OAAIG,IAAgBF,EACX,kBAAC,KAAD,CAAUG,GAAID,GAAeE,KAE/B,kBAAC,KAAD,CAAUD,GAAIC,QAGVC,GAA2B,SAA3BA,EACXV,EACAtH,EACAiI,GAEA,IAAMC,EAAiBlI,EACrB,kBAAC,KAAD,KACG4D,eAAI5D,GAAU,SAACmI,EAAO5E,GACrB,OAAOyE,EAAyBG,EAAOA,EAAMnI,SAAUsH,MAEzD,kBAACG,GAAD,CAAeC,OAAQ1H,EAAUsH,MAAOA,KAExC,KAEJ,OACE,kBAAC,GAAD,eACEY,eAAgBA,GACZZ,EAFN,CAGEA,MAAOA,EACPW,YAAaA,EACbd,YAAanH,MAKboI,GAAiD3J,IAAMC,MAAK,SAAuBC,GAAQ,IAE7FuJ,EASEvJ,EATFuJ,eACAZ,EAQE3I,EARF2I,MACAW,EAOEtJ,EAPFsJ,YACAd,EAMExI,EANFwI,YACQkB,EAKN1J,EALF2J,OACAC,EAIE5J,EAJF4J,YAEWC,GAET7J,EAHFqB,SAGErB,EAFF8J,WACGC,EAVyF,aAW1F/J,EAX0F,sGAgB9F,OAHIsJ,IAAgBA,EAAYU,cAC9BV,EAAYT,mBAAZ,OAAiCF,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAOC,MAErCD,GAIAH,GACCqB,EACEH,EAEA,kBAAC,GAAD,iBACMK,EADN,CAEEE,OAAQ,kBACN,kBAACP,EAAD,eAAQf,MAAOA,GAAWiB,GACxB,kBAACC,EAAoBE,QAMxB,kBAAC,GAAD,iBAAkBA,EAAlB,CAA6BE,OAAQ,kBAAM,kBAACJ,EAAoBE,OAIvEvB,GACEkB,EAEA,kBAAC,GAAD,iBACMK,EADN,CAEEE,OAAQ,kBACN,kBAACP,EAAD,eAAQlB,YAAaA,EAAaG,MAAOA,GAAWiB,GACjDL,OAONA,EAnCEA,KAuCEW,GAAe,SAAC,GAA4C,IAA1CD,EAAyC,EAAzCA,OAAWE,EAA8B,2BACtE,OAAO,kBAAC,KAAD,iBAAWA,EAAX,CAAiBF,OAAQA,MCtG5B9F,I,YAAS,aAsCAiG,GAvBqBtK,IAAMC,MAAK,SAA2BC,GAAQ,IACxEC,EAA2BD,EAA3BC,UAAWuI,EAAgBxI,EAAhBwI,YACb6B,EAVmB,SAACC,GAC1B,IAAMrB,EAAWsB,eACXC,EAAS/F,mBAAQ,WACrB,OAAOiE,gBAAK4B,GAAS,SAACE,GAAD,OAAYvB,EAASD,SAASyB,SAASD,EAAO5B,WAClE,CAACK,EAASD,SAAUsB,IACvB,cAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAQ5B,KAKK8B,CAAmBlC,GAEvC,OACE,yBAAKvI,UAAWS,IAAI,GAAD,OAAIyD,IAAUlE,IAC9BuI,EAAYvD,KAAI,SAACuF,GAAD,OACfH,IAAgBG,EAAO5B,KACrB,0BAAM3I,UAAWS,IAAI,GAAD,OAAIyD,GAAJ,SAAmB,cACpCqG,EAAO/H,KACR,yBAAKxC,UAAS,UAAKkE,GAAL,iBAGhB,kBAAC,KAAD,CAAMlE,UAAWS,IAAI,GAAD,OAAIyD,GAAJ,UAAoBwG,IAAKH,EAAO5B,KAAMO,GAAIqB,EAAO5B,MAClE4B,EAAO/H,KACR,yBAAKxC,UAAS,UAAKkE,GAAL,wBChCpBA,GAAS,SAyBAuF,GAjBkB5J,IAAMC,MAAK,SAAgBC,GAAQ,IAC1D4K,EAAiC5K,EAAjC4K,MAAOpC,EAA0BxI,EAA1BwI,YAAanH,EAAarB,EAAbqB,SAC5B,OACE,yBAAKpB,UAAWS,IAAI,GAAD,OAAIyD,MACrB,yBAAKlE,UAAS,UAAKkE,GAAL,UACZ,0BAAMlE,UAAS,UAAKkE,GAAL,eAA0ByG,IAE3C,yBAAK3K,UAAS,UAAKkE,GAAL,UACZ,yBAAKlE,UAAS,UAAKkE,GAAL,cACZ,kBAAC,GAAD,CAAWqE,YAAaA,KAE1B,yBAAKvI,UAAS,UAAKkE,GAAL,eAA0B9C,QCrB1C8C,I,YAAS,UAsBA0G,GAhBkB/K,IAAMC,MAAK,SAAgBC,GAAQ,IAC1DC,EAAwBD,EAAxBC,UAAWoB,EAAarB,EAAbqB,SAD8C,EAEzCnB,oBAAkB,GAFuB,mBAE1D4K,EAF0D,KAEpDC,EAFoD,KAMjE,OACE,yBAAK9K,UAAWS,IAAI,GAAD,OAAIyD,IAAUlE,IAC/B,yBAAKA,UAAS,UAAKkE,GAAL,YAAuBxD,QALtB,WACjBoK,GAAQ,SAACtJ,GAAD,OAAWA,OAKdqJ,EAAO,eAAO,gBAEfA,EAA4D,KAArD,yBAAK7K,UAAS,UAAKkE,GAAL,UAAqB9C,OChB5C8C,GAAS,SAuBA6G,GAfkBlL,IAAMC,MAAK,SAAgBC,GAC1D,IACQC,EAAwBD,EAAxBC,UAAWgL,EAAajL,EAAbiL,GAAIC,EAASlL,EAATkL,KACvB,OACE,yBAAKjL,UAAWS,IAAI,GAAD,OAAIyD,IAAUlE,IAC/B,kBAAC,GAAD,CAAQA,UAAS,UAAKkE,GAAL,UAAqB+G,GACrCD,GACC,kBAAC,GAAD,CAAQhL,UAAS,UAAKkE,GAAL,QACf,yBAAKgH,wBAAyB,CAAEC,OAAQH,UCR5CI,GAAWC,kBAEjB,SAASC,GAAQ3C,GACf,MAAM,GAAN,OAAUyC,IAAV,OAAqBzC,GAGhB,IAAMQ,GAAWmC,GAAQ,SAC1BxC,GAAmB,CACvB,CACEH,KAAMyC,GACN1B,OAAQD,GACRE,YAAa,CAAEgB,MAAO,sBACtBZ,aAAa,EACb3I,SAAU,CACR,CACEuH,KAAMQ,GACN3G,KAAM,OACNqH,UAAW,kBAAM,kBAAC,GAAD,CAAQmB,GAAIO,QAE/B,CACE5C,KAAM2C,GAAQ,cACd9I,KAAM,YACNqH,UAAW,kBAAM,kBAAC,GAAD,CAAQmB,GAAI5K,IAAW6K,KAAM,kBAAC,EAAD,UAEhD,CACEtC,KAAM2C,GAAQ,eACd9I,KAAM,aACNqH,UAAW,kBAAM,kBAAC,GAAD,CAAQmB,GAAIhI,IAAYiI,KAAM,kBAAC,EAAD,UAEjD,CACEtC,KAAM2C,GAAQ,SACd9I,KAAM,aACNqH,UAAW,kBAAM,kBAAC,GAAD,CAAQoB,KAAM,kBAAC,GAAD,aAiBxBO,GAXI,WACjB,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACGpC,QAAyBqC,EAAW3C,IACrC,kBAAC,KAAD,CAAUI,GAAIC,QChDPuC,I,MAJO7L,IAAMC,MAAK,SAAaC,GAC5C,OAAO,kBAAC,GAAD,UCAT4L,IAAS3B,OAAO,kBAAC,GAAD,MAASlE,SAAS8F,eAAe,W","file":"static/js/main.8f3c4ef9.chunk.js","sourcesContent":["// Module\nvar code = \"<p>这个博客主要用来记录 react 学习中遇到的点点滴滴，巩固知识点。</p> <hr> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h1 id=\\\"useeffect、uselayouteffect\\\">useEffect、useLayoutEffect</h1> <hr> <p>useEffect 的作用和 componentDidMount 以及 componentDidUpdate 有点类似，只不过 useEffect 的粒度更细，可以在 useEffect 中控制一个流程的发起和销毁。具体用法可以查看<a href=\\\"https://zh-hans.reactjs.org/docs/hooks-effect.html\\\">官网</a>,这里主要讨论下 useEffect 和 componentDidMount/componentDidUpdate 的区别 以及 useEffect 和 useLayoutEffect 的区别。</p> <h2 id=\\\"useeffect-vs-componentdidmountcomponentdidupdate\\\">useEffect vs componentDidMount/componentDidUpdate</h2> <p>componentDidMount 是 class 组件初次渲染结束时执行的生命周期函数，是在 react 的 commit 阶段，紧接着组件渲染完后执行的，会阻塞浏览器的渲染，如果在其中执行耗时的任务，那在耗时任务结束前，页面是看不到更新的，componentDidUpdate 和 componentDidMount 的行为差不多，只是执行的时机不是初次渲染。</p> <p>useEffect 有三个重要的组成，处理函数、依赖、销毁函数（处理函数返回的函数），每当依赖发生变化都会先执行上一次生成的销毁函数再执行新的处理函数。</p> <p><strong>useEffect 不会阻塞浏览器的渲染</strong>，因为 useEffect 是等到 commit 完成后，再在另一个宏任务中执行的，这个宏任务是通过 messageChannel 的 postMessage 触发的 j 具体细节可查看 react schedule 模块的实现。</p> <h2 id=\\\"useeffect-vs-uselayouteffect\\\">useEffect vs useLayoutEffect</h2> <p>事实上百分之 99%的场景使用 useEffect 和 useLayoutEffect 的效果是一样的, 不同点是，useLayoutEffect 的表现和 componentDidUpdate 一样，会阻塞浏览器的渲染,具体可参考<a href=\\\"https://codesandbox.io/s/useeffect-vs-uselayouteffect-gtvim\\\">useEffect</a>,可以发现使用 useEffect 时红色数字 1 会一闪而过，useLayoutEffect 不会出现这种现象。</p> <p><img src=\\\"/react-markdown/assets/useEffect.png\\\" alt=\\\"github\\\" width=\\\"80%\\\" style=\\\"margin:auto;display:block\\\"></p> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"\";\n// Exports\nmodule.exports = code;","import React, { useCallback, useEffect, useState } from 'react';\nimport cls from 'classnames';\n\nconst PREFIX = 'useEffectView';\n\ninterface IProps {\n  className?: string;\n}\n\nconst UseEffectView: React.FC<IProps> = React.memo(function useEffectView(props) {\n  const { className } = props;\n  const [count, setCount] = useState<number>(0);\n  useEffect(() => {\n    console.log(count);\n    return () => {\n      console.log('unmount effect');\n    };\n  }, [count]);\n\n  const handleClick = useCallback(() => {\n    setCount(count + 1);\n  }, [count]);\n  return (\n    <div className={cls(`${PREFIX}`, className)} onClick={handleClick}>\n      {count}\n    </div>\n  );\n});\n\nexport default UseEffectView;\n","import styled from 'styled-components';\nimport React, { useCallback, useState } from 'react';\nexport const Scene = styled.div`\n  background-color: #f4f9fe;\n  margin-top: 20px;\n  padding: 16px 20px;\n`;\n\nexport const Panel = styled.div`\n  border: 2px solid #2196f3;\n  padding: 16px 20px;\n  margin: 10px 0;\n`;\n\nexport const H3 = styled.div`\n  font-size: 16px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\nexport const H2 = styled.div`\n  font-size: 20px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\nexport const H1 = styled.div`\n  font-size: 24px;\n  margin-bottom: 8px;\n  font-weight: 600;\n`;\nexport const Button = styled.div`\n  font-size: 12px;\n  background-color: #e6ecf1;\n  padding: 4px 8px;\n  cursor: pointer;\n  line-height: 12px;\n  font-weight: 600;\n  user-select: none;\n`;\nconst Conclusion: React.FC = React.memo(function Conclusion(props) {\n  const { children } = props;\n  const [visible, setVisible] = useState<boolean>(false);\n  const handleOpen = useCallback(() => {\n    setVisible((prev) => !prev);\n  }, []);\n  return (\n    <div\n      style={{\n        position: 'relative',\n        borderTop: '2px solid #e6ecf1',\n        backgroundColor: '#f4f9fe',\n        padding: '10px',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n\n          height: '20px',\n          textAlign: 'right',\n          fontSize: '12px',\n          lineHeight: '20px',\n        }}\n        onClick={handleOpen}\n      >\n        <H3>结论</H3>\n\n        <Button>{visible ? '收起' : '展开'}</Button>\n      </div>\n      {visible && <div style={{ padding: '16px 20px' }}>{children}</div>}\n    </div>\n  );\n});\n\nexport default Conclusion;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\n\nconst countContext = React.createContext<{ count?: string }>({ count: '' });\ncountContext.displayName = 'Count';\n\nconst First: React.FC = React.memo(function First(props) {\n  const [count, setCount] = useState<string>('1');\n  const [name, setName] = useState<string>('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n\n  const handleChangeCount = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCount(e.target.value);\n  };\n  return (\n    <>\n      <Scene>\n        <countContext.Provider value={{ count }}>\n          <H1>场景1: 验证在什么情况接收人会响应更新</H1>\n          <div>\n            <span>name：</span>\n            <input value={name} onChange={handleChange} />\n          </div>\n          <Panel>\n            <H2>context</H2>\n            <span>count：</span>\n            <input value={count} onChange={handleChangeCount} />\n            <Receiver />\n          </Panel>\n        </countContext.Provider>\n      </Scene>\n      <Conclusion>context属性的值或者引用变了，接收者才能拿到更新</Conclusion>\n    </>\n  );\n});\n\nexport default First;\n\nconst Receiver: React.FC = React.memo(function Receiver() {\n  const { count } = useContext(countContext);\n  const renderCount = useRef<number>(1);\n  useEffect(() => {\n    renderCount.current += 1;\n  });\n  return (\n    <Panel>\n      <H2>我是接收人</H2>\n      收到的count：{count}\n      <div>收到通知的次数：{renderCount.current}</div>\n    </Panel>\n  );\n});\n","import React, { PropsWithChildren } from 'react';\n\nexport default function DataProvider<T extends Record<string, any>, P>(\n  params: () => T,\n  Component: React.FC<P & T>,\n) {\n  return React.memo((props: PropsWithChildren<P>) => {\n    return (<Component as {...props} {...params()} />) as React.ReactElement<P & T>;\n  });\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\nimport DataProvider from '../DataProvider';\n\nconst countContext = React.createContext<{ fish?: number; fruit?: number }>({});\n\nconst Fourth: React.FC = React.memo(function Third(props) {\n  const [fish, setFish] = useState<number>();\n  const [fruit, setFruit] = useState<number>();\n\n  const handleChangeFish = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFish(~~e.target.value);\n  };\n  const handleChangeFruit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFruit(~~e.target.value);\n  };\n  return (\n    <>\n      <Scene>\n        <countContext.Provider value={{ fish, fruit }}>\n          <H1>场景4: 尝试用props传入的方式破解场景3中遇到的问题</H1>\n\n          <Panel>\n            <H2>批发市场（context）</H2>\n            <div>\n              <span>鱼：</span>\n              <input value={fish} onChange={handleChangeFish} />\n            </div>\n            <div>\n              <span>水果：</span>\n              <input value={fruit} onChange={handleChangeFruit} />\n            </div>\n            <FishReceiver />\n            <FruitReceiver />\n          </Panel>\n        </countContext.Provider>\n      </Scene>\n      <Conclusion>\n        用props传入的方式可以在一定程度上解决这个问题。 QA: 这个方法有啥优缺点？\n      </Conclusion>\n    </>\n  );\n});\n\nexport default Fourth;\n\nconst FishReceiver: React.FC = DataProvider(\n  () => {\n    const { fish } = useContext(countContext);\n    return { fish };\n  },\n  React.memo(function Receiver({ fish }) {\n    const renderCount = useRef<number>(1);\n    useEffect(() => {\n      renderCount.current += 1;\n    });\n\n    return (\n      <Panel>\n        <H2>水产商人：</H2>\n        当前鱼总数：{fish}\n        <div>收到通知的次数：{renderCount.current}</div>\n      </Panel>\n    );\n  }),\n);\n\nconst FruitReceiver: React.FC = DataProvider(\n  () => {\n    const { fruit } = useContext(countContext);\n    return { fruit };\n  },\n  React.memo(function Receiver({ fruit }) {\n    const renderCount = useRef<number>(1);\n    useEffect(() => {\n      renderCount.current += 1;\n    });\n    return (\n      <Panel>\n        <H2>水果商人：</H2>\n        当前水果总数：{fruit}\n        <div>收到通知的次数：{renderCount.current}</div>\n      </Panel>\n    );\n  }),\n);\n","import React, { useContext } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\n\nconst countContext = React.createContext<{ count: number }>({ count: 0 });\n\nconst Second: React.FC = React.memo(function Second(props) {\n  return (\n    <>\n      <Scene>\n        <H1>场景2: 同一个context提供多个嵌套的provider，接收者接收到的是哪个provider的数据？</H1>\n        <Panel>\n          <H2>context: </H2>\n          count: 0\n          <countContext.Provider value={{ count: 1 }}>\n            <Panel>\n              <H2>provider1:</H2>\n              count: 1\n              <countContext.Provider value={{ count: 2 }}>\n                <Panel>\n                  <H2>provider2:</H2>\n                  count: 2\n                  <Receiver />\n                </Panel>\n              </countContext.Provider>\n              <Receiver />\n            </Panel>\n          </countContext.Provider>\n          <Receiver />\n        </Panel>\n      </Scene>\n      <Conclusion>就近原则</Conclusion>\n    </>\n  );\n});\n\nexport default Second;\n\nconst Receiver: React.FC = React.memo(function Receiver(props) {\n  const { count } = useContext(countContext);\n  return (\n    <Panel>\n      <H2>我是接收人</H2>\n      收到的count：{count}\n    </Panel>\n  );\n});\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport Conclusion, { H1, H2, Panel, Scene } from '../../../components/Common';\n\nconst countContext = React.createContext<{ fish?: number; fruit?: number }>({});\n\nconst Third: React.FC = React.memo(function Third(props) {\n  const [fish, setFish] = useState<number>();\n  const [fruit, setFruit] = useState<number>();\n\n  const handleChangeFish = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFish(~~e.target.value);\n  };\n  const handleChangeFruit = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFruit(~~e.target.value);\n  };\n  return (\n    <>\n      <Scene>\n        <countContext.Provider value={{ fish, fruit }}>\n          <H1>\n            场景3: 当context其中一个属性变化时，所有接收者是否都会触发re-render 即使没有使用该属性？\n          </H1>\n\n          <Panel>\n            <H2>批发市场（context）</H2>\n            <div>\n              <span>鱼：</span>\n              <input value={fish} onChange={handleChangeFish} />\n            </div>\n            <div>\n              <span>水果：</span>\n              <input value={fruit} onChange={handleChangeFruit} />\n            </div>\n            <FishReceiver />\n            <FruitReceiver />\n          </Panel>\n        </countContext.Provider>\n      </Scene>\n      <Conclusion>\n        当context其中一个属性变化时，所有接收者是否都会触发re-render 即使没有使用该属性。\n        <div>有没有破解之法？</div>\n      </Conclusion>\n    </>\n  );\n});\n\nexport default Third;\n\nconst FishReceiver: React.FC = React.memo(function Receiver(props) {\n  const { fish } = useContext(countContext);\n  const renderCount = useRef<number>(1);\n  useEffect(() => {\n    renderCount.current += 1;\n  });\n\n  return (\n    <Panel>\n      <H2>水产商人：</H2>\n      当前鱼总数：{fish}\n      <div>收到通知的次数：{renderCount.current}</div>\n    </Panel>\n  );\n});\n\nconst FruitReceiver: React.FC = React.memo(function Receiver(props) {\n  const { fruit } = useContext(countContext);\n  const renderCount = useRef<number>(1);\n  useEffect(() => {\n    renderCount.current += 1;\n  });\n  return (\n    <Panel>\n      <H2>水果商人：</H2>\n      当前水果总数：{fruit}\n      <div>收到通知的次数：{renderCount.current}</div>\n    </Panel>\n  );\n});\n","import React from 'react';\nimport First from './scene/first';\nimport Fourth from './scene/fourth';\nimport Second from './scene/second';\nimport Third from './scene/third';\n\nconst UseContext: React.FC = React.memo(function UseContext(props) {\n  return (\n    <div>\n      <First />\n      <Second />\n      <Third />\n      <Fourth />\n    </div>\n  );\n});\n\nexport default UseContext;\n","import React, { useMemo } from 'react';\nimport cls from 'classnames';\nimport './index.less';\n\nconst PREFIX = 'TimePeriodScale';\nconst Scale: React.FC<{ max: number; min: number; step: number; className?: string }> = React.memo(\n  function Scale(props) {\n    const { max, min, step, className } = props;\n\n    const scales = useMemo(() => {\n      let data: Array<{ value: number; length: number; text: number; textVisible: boolean }> = [];\n      let cursor = min;\n      let index = 0;\n      while (cursor <= max) {\n        data.push({\n          value: cursor,\n          length: cursor / max,\n          text: cursor,\n          textVisible: !(index % 2),\n        });\n        index++;\n        cursor += step;\n      }\n      return data;\n    }, [max, min, step]);\n    return (\n      <div className={cls(className, `${PREFIX}`)}>\n        {scales.map((scale) => (\n          <div\n            className={`${PREFIX}-pin`}\n            style={{\n              position: 'absolute',\n              left: `${scale.length * 100}%`,\n              top: 0,\n            }}\n          >\n            <span className={cls(`${PREFIX}-pinText`, { 'is-visible': scale.textVisible })}>\n              {scale.text}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  },\n);\n\nexport default Scale;\n","//  0 < n < 24;\n\nimport { IRange } from './interface';\n\nfunction formatTime(n: number) {\n  const s = '00' + n;\n  return s.slice(s.length - 2);\n}\n\nexport function transformNum2Time(n: number) {\n  const hour = Math.floor(n / 60);\n  const minutes = n % 60;\n\n  return `${formatTime(hour)}:${formatTime(minutes)}:00`;\n}\n\n// export function timeStrToNum(n: string) {\n//   const [s1, s2, s3] = n.split(':');\n//   const n1 = parseInt(s1);\n//   const n2 = parseInt(s2) / 60;\n//   const n3 = parseInt(s3) / 600;\n\n//   return n1 + n2 + n3s\n// }\n\nexport function transformRange2Time(range: IRange) {\n  return `${transformNum2Time(range[0])}~${transformNum2Time(range[1])}`;\n}\n","import React, { CSSProperties, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useForceUpdate } from '../../useForceUpdate';\nimport { transformRange2Time } from '../util';\nimport { IRange } from '../interface';\nimport cls from 'classnames';\nimport './index.less';\n\nconst PREFIX = 'Slide';\n\ninterface IProps {\n  className?: string;\n  value?: IRange;\n  steps?: number;\n  onChange?: (value: IRange) => void;\n}\n\nconst width = 1440;\n\nfunction setDocumentCursor(cursor: string) {\n  document.body.style.cursor = cursor;\n}\nconst Slide: React.FC<IProps> = React.memo(function Slide(props) {\n  const { className, steps = 1440, value: slice, onChange } = props;\n  const wrapRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {}, []);\n  const handleRangeChange = useCallback(\n    (value) => {\n      if (value) {\n        onChange?.(value);\n      }\n    },\n    [onChange],\n  );\n\n  return (\n    <div className={cls(`${PREFIX}`, className)} ref={wrapRef}>\n      {slice && (\n        <Slice value={slice} steps={steps} wrapWidth={width} onChange={handleRangeChange} />\n      )}\n    </div>\n  );\n});\n\nexport default Slide;\n\n/**\n * value: [start, end]     0 < start < end < steps;\n */\ninterface IItems {\n  className?: string;\n  value: IRange;\n  steps: number;\n  wrapWidth: number;\n  onChange?: (value: IRange | undefined) => void;\n}\n\nconst Slice: React.FC<IItems> = React.memo(function Slice(props) {\n  const { className, steps, value, wrapWidth, onChange } = props;\n  const forceUpdate = useForceUpdate();\n\n  const cache = useRef<IRange>(value);\n  const [isActive, setIsActive] = useState<boolean>(false);\n  useMemo(() => {\n    cache.current = value;\n  }, [value]);\n\n  const [start, end] = cache.current;\n\n  const styles = useMemo(() => {\n    return {\n      left: `${(start / steps) * 100}%`,\n      right: `${(1 - end / steps) * 100}%`,\n    } as CSSProperties;\n  }, [end, start, steps]);\n\n  const handleClick = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    setIsActive((prev) => !prev);\n  }, []);\n\n  const handleDrag = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      // @ts-ignore\n      const type = e.currentTarget.dataset.type;\n      // 起点\n      const startX = e.clientX;\n      function moveMove(e: MouseEvent) {\n        let currentX = e.clientX,\n          offset = (Math.floor(currentX - startX) / wrapWidth) * steps,\n          nextLeft = cache.current[0],\n          nextRight = cache.current[1];\n\n        if (type === 'left') {\n          nextLeft += offset;\n          nextLeft = Math.min(Math.max(0, nextLeft), nextRight);\n        } else {\n          nextRight += offset;\n          nextRight = Math.min(steps, Math.max(nextRight, nextLeft));\n        }\n        setDocumentCursor('w-resize');\n        cache.current = [nextLeft, nextRight];\n\n        forceUpdate();\n      }\n\n      function moveUp() {\n        onChange?.(cache.current);\n        document.removeEventListener('mousemove', moveMove);\n        document.removeEventListener('mouseup', moveUp);\n        setDocumentCursor('initial');\n      }\n      document.addEventListener('mousemove', moveMove);\n      document.addEventListener('mouseup', moveUp);\n    },\n    [forceUpdate, onChange, steps, wrapWidth],\n  );\n\n  return (\n    <div style={styles} className={`${PREFIX}-sliceBox`}>\n      <div\n        className={cls(`${PREFIX}-slice`, className, { 'is-active': isActive })}\n        onMouseDown={handleClick}\n      >\n        <span\n          className={cls(`${PREFIX}-sliceLeftDrag`, { 'is-visible': isActive })}\n          data-type=\"left\"\n          onMouseDown={handleDrag}\n        ></span>\n        <span\n          className={cls(`${PREFIX}-sliceRightDrag`, { 'is-visible': isActive })}\n          data-type=\"right\"\n          onMouseDown={handleDrag}\n        ></span>\n        <div className={cls(`${PREFIX}-sliceTip`, { 'is-visible': isActive })}>\n          {transformRange2Time(cache.current)}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { ReducerWithoutAction, useReducer } from 'react';\nexport const useForceUpdate = () => {\n  const [, setReload] = useReducer<ReducerWithoutAction<number>, number>(\n    value => value + 1,\n    0,\n    value => value,\n  );\n  return setReload;\n};\n","import { IRange } from './interface';\nimport React from 'react';\nimport Scale from './Scale';\nimport Slide from './Slide';\nimport cls from 'classnames';\nimport './index.less';\n\nconst PREFIX = 'SchedulePanel';\n\ninterface IProps {\n  className?: string;\n  onChange?: (value: Array<IRange>) => void;\n}\n\nconst SchedulePanel: React.FC<IProps> = React.memo(function TimePeriod(props) {\n  const { className, onChange } = props;\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <Scale className={`${PREFIX}-scale`} max={24} min={0} step={1} />\n      <Slide value={[0, 8]} steps={1440} />\n    </div>\n  );\n});\n\nexport default SchedulePanel;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport SchedulePanel from './Schedule';\n\nconst PREFIX = 'MeetPage';\n\ninterface IProps {\n  className?: string;\n}\n\nconst MeetPage: React.FC<IProps> = React.memo(function MeetPage(props) {\n  const { className } = props;\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <SchedulePanel />\n    </div>\n  );\n});\n\nexport default MeetPage;\n","import { IRoute } from './interface';\nimport { find } from 'lodash';\n\nexport const recoverPath: (currentRoute?: IRoute, childRoutes?: IRoute[]) => string = (\n  currentRoute,\n  childRoutes,\n) => {\n  if (currentRoute && childRoutes?.length) {\n    const matchedChildRoute = find(\n      childRoutes,\n      (route) => route.path === currentRoute?.lastChildRoutePath,\n    );\n\n    const nextRoute = matchedChildRoute || childRoutes[0];\n    return recoverPath(nextRoute, nextRoute.children);\n  }\n  return currentRoute?.path || '';\n};\n","import { IRoute } from './interface';\nimport { Redirect, Route, RouteComponentProps, RouteProps, Switch } from 'react-router-dom';\nimport { map } from 'lodash';\nimport { recoverPath } from './util';\nimport React from 'react';\nimport { homePath } from '.';\n\ntype IRouteWithLayoutProps = Omit<RouteProps, 'component' | 'render' | 'children'> & {\n  childrenRender: React.ReactNode;\n  childRoutes?: IRoute[];\n  parentRoute?: IRoute;\n  route?: IRoute;\n} & Partial<IRoute>;\n\nconst RedirectRoute: React.FC<\n  Partial<RouteComponentProps> & {\n    routes?: IRoute[];\n    route?: IRoute;\n  }\n> = React.memo(function ({ route, routes, location }) {\n  const { pathname } = location || {};\n  const redirectUrl = recoverPath(route, routes);\n  if (redirectUrl !== pathname) {\n    return <Redirect to={redirectUrl || homePath} />;\n  }\n  return <Redirect to={homePath} />;\n});\n\nexport const renderRouterWithChildren = (\n  route: IRoute | undefined,\n  children?: IRoute[],\n  parentRoute?: IRoute,\n) => {\n  const childrenRender = children ? (\n    <Switch>\n      {map(children, (child, index) => {\n        return renderRouterWithChildren(child, child.children, route);\n      })}\n      <RedirectRoute routes={children} route={route} />\n    </Switch>\n  ) : null;\n\n  return (\n    <CustomerRoute\n      childrenRender={childrenRender}\n      {...route}\n      route={route}\n      parentRoute={parentRoute}\n      childRoutes={children}\n    />\n  );\n};\n\nconst CustomerRoute: React.FC<IRouteWithLayoutProps> = React.memo(function CustomerRoute(props) {\n  const {\n    childrenRender,\n    route,\n    parentRoute,\n    childRoutes,\n    layout: Layout,\n    layoutProps,\n    children,\n    component: RouterComponent,\n    ...restProps\n  } = props;\n\n  if (parentRoute && !parentRoute.ignoreCache) {\n    parentRoute.lastChildRoutePath = route?.path;\n  }\n  if (!route) {\n    return childrenRender as React.ReactElement;\n  }\n\n  if (!childRoutes) {\n    if (RouterComponent) {\n      if (Layout) {\n        return (\n          <PrivateRoute\n            {...restProps}\n            render={() => (\n              <Layout route={route} {...layoutProps}>\n                <RouterComponent {...restProps} />\n              </Layout>\n            )}\n          />\n        );\n      }\n      return <PrivateRoute {...restProps} render={() => <RouterComponent {...restProps} />} />;\n    }\n  }\n\n  if (childRoutes) {\n    if (Layout) {\n      return (\n        <PrivateRoute\n          {...restProps}\n          render={() => (\n            <Layout childRoutes={childRoutes} route={route} {...layoutProps}>\n              {childrenRender}\n            </Layout>\n          )}\n        />\n      );\n    }\n  }\n  return childrenRender as React.ReactElement;\n});\ntype PrivateRouteProps = Required<Pick<RouteProps, 'render'>> &\n  Omit<RouteProps, 'component' | 'render'>;\nexport const PrivateRoute = ({ render, ...rest }: PrivateRouteProps) => {\n  return <Route {...rest} render={render} />;\n};\n","import { Link } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { useLocation } from 'react-router';\nimport React, { useMemo } from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../../router/interface';\n\nconst PREFIX = 'Mavigator';\n\ninterface IProps {\n  className?: string;\n  childRoutes: IRoute[];\n}\n\nconst useRouterPathMatch = (routers: IRoute[]) => {\n  const location = useLocation();\n  const router = useMemo(() => {\n    return find(routers, (router) => location.pathname.includes(router.path));\n  }, [location.pathname, routers]);\n  return router?.path;\n};\n\nconst Mavigator: React.FC<IProps> = React.memo(function AppThirdNavigator(props) {\n  const { className, childRoutes } = props;\n  const matchedPath = useRouterPathMatch(childRoutes);\n\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      {childRoutes.map((router) =>\n        matchedPath === router.path ? (\n          <span className={cls(`${PREFIX}-item`, 'is-active')}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </span>\n        ) : (\n          <Link className={cls(`${PREFIX}-item`)} key={router.path} to={router.path}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </Link>\n        ),\n      )}\n    </div>\n  );\n});\n\nexport default Mavigator;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../router/interface';\nimport Navigator from './Navigator';\n\nconst PREFIX = 'Layout';\n\ninterface IProps {\n  title?: React.ReactNode;\n  route?: IRoute;\n  childRoutes: IRoute[];\n}\n\nconst Layout: React.FC<IProps> = React.memo(function Layout(props) {\n  const { title, childRoutes, children } = props;\n  return (\n    <div className={cls(`${PREFIX}`)}>\n      <div className={`${PREFIX}-head`}>\n        <span className={`${PREFIX}-headTitle`}>{title}</span>\n      </div>\n      <div className={`${PREFIX}-body`}>\n        <div className={`${PREFIX}-bodyLeft`}>\n          <Navigator childRoutes={childRoutes} />\n        </div>\n        <div className={`${PREFIX}-bodyRight`}>{children}</div>\n      </div>\n    </div>\n  );\n});\n\nexport default Layout;\n","import React, { useState } from 'react';\nimport cls from 'classnames';\nimport './index.less';\n\nconst PREFIX = 'Folder';\n\ninterface IProps {\n  className?: string;\n}\n\nconst Folder: React.FC<IProps> = React.memo(function Folder(props) {\n  const { className, children } = props;\n  const [fold, setFold] = useState<boolean>(false);\n  const handleFold = () => {\n    setFold((prev) => !prev);\n  };\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <div className={`${PREFIX}-foldBtn`} onClick={handleFold}>\n        {fold ? '展开' : '收起'}\n      </div>\n      {!fold ? <div className={`${PREFIX}-body`}>{children}</div> : null}\n    </div>\n  );\n});\n\nexport default Folder;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport Folder from '../Layout/Folder';\n\nconst PREFIX = 'MdView';\n\ninterface IProps {\n  className?: string;\n  md?: string;\n  view?: React.ReactNode;\n}\n\nconst MdView: React.FC<IProps> = React.memo(function MdView(props) {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const { className, md, view } = props;\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      <Folder className={`${PREFIX}-body`}>{view}</Folder>\n      {md && (\n        <Folder className={`${PREFIX}-md`}>\n          <div dangerouslySetInnerHTML={{ __html: md }}></div>\n        </Folder>\n      )}\n    </div>\n  );\n});\n\nexport default MdView;\n","import home from '../md/home/index.md';\nimport useEffect from '../md/useEffect/index.md';\nimport UseEffectView from '../md/useEffect';\nimport useContext from '../md/useContext/index.md';\nimport UseContextView from '../md/useContext';\nimport Meet from '../md/meet';\nimport { Switch, Redirect, BrowserRouter } from 'react-router-dom';\nimport { renderRouterWithChildren } from './routeWithLayout';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport MdView from '../components/MdView';\nimport { IRoute } from './interface';\n\nconst WEB_ROOT = process.env.WEB_ROOT || '/';\n\nfunction getPath(path: string) {\n  return `${WEB_ROOT}${path}`;\n}\n\nexport const homePath = getPath('/home');\nconst routes: IRoute[] = [\n  {\n    path: WEB_ROOT,\n    layout: Layout,\n    layoutProps: { title: 'react 解析' },\n    ignoreCache: true,\n    children: [\n      {\n        path: homePath,\n        name: 'home',\n        component: () => <MdView md={home} />,\n      },\n      {\n        path: getPath('/useEffect'),\n        name: 'useEffect',\n        component: () => <MdView md={useEffect} view={<UseEffectView />} />,\n      },\n      {\n        path: getPath('/useContext'),\n        name: 'useContext',\n        component: () => <MdView md={useContext} view={<UseContextView />} />,\n      },\n      {\n        path: getPath('/meet'),\n        name: 'useContext',\n        component: () => <MdView view={<Meet />} />,\n      },\n    ],\n  },\n];\n\nconst RootRouter = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {renderRouterWithChildren(undefined, routes)}\n        <Redirect to={homePath} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RootRouter;\n","import React from 'react';\nimport RootRouter from './router';\nimport './index.less';\n\nconst App: React.FC = React.memo(function App(props) {\n  return <RootRouter />;\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Demo from './md/useContext/scene/demo';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<Demo />, document.getElementById('root'));\n"],"sourceRoot":""}